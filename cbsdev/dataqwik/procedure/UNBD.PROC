//DO NOT MODIFY  Business Day Utilities|UNBD|||||||1
UNBD	// Business Day Utilities
	
	/*
	ORIG:   SOMPALLI - 12 MAR 1991
	Procedure ID: UNBD 
	DESC: Utilities used to verify or find business date.
	
	KEYWORDS: Date and Time
	
	LIBRARY:
		. BD	  - Identifies whether a date is a valid business day.
		
		. NBD  - Determines next business date
		
		. PRBD - Determines previous business date

	  --Revision History----------------------------------------------------
	  
	08/30/07 - RussellDS - CR28928
		   Added use of cache to BD section.
	  
	05/15/06 - RussellDS - CR21296
		   Changed to use cache array instead of %CACHE, which is
		   reserved for PSL record objects.
		   
		   Corrected code to avoid PSL warnings.  
	
	10/13/05 - HILLANBRAND - 17532
		   Corrected check on ZCAL in BD section to be DATE#7+2.

	04/18/01 - ARCILLAZ - 43583
		Converted to PSL. Removed old revision history.

		10/10/02 - YENDAPALLIS - 43583
		Cleaned up the procedure.		
	
	03/08/01 - Allan Mattson - 44179
		Modified to cache calls to $$NBD^UNBD and to replace the
		code that determined the 1st of the month with a call to
		$$BOMJD^SCADAT.
	
	  ----------------------------------------------------------------------
	*/
	quit

public BD(DATE,CAL)       //Identifies whether or not a date is a valid business day

		/*
		KEYWORDS: Date and Time
	
		ARGUMENTS:

			. DATE	The date to analyze			/TYP=D/REQ
	
			. CAL	Non-business date calendar		/TYP=T/REQ
	
		RETURNS:
			. $$	Business date identifier		/TYP=L
	    			0 = non-business date
	    			1 = business date
	
		EXAMPLE:
			I '$$BD^UNBD(X,CAL) S ER=1,RM=$$^MSG("RM950") Q

		*/
		
	type public Cache %CACHE()
		
	type String ZCAL

	if '$G(DATE) set DATE=%SystemDate
	if $G(CAL)="" set CAL="IBS"
	
	type RecordUTBLNBD utblnbd = %CACHE("UTBLNBD").getRecord("UTBLNBD", "NBDC=:CAL", 1)
	if 'utblnbd.getMode() quit 1
	else  set ZCAL=utblnbd.caldes_$C(9)_utblnbd.thu_$C(9)_utblnbd.fri_$C(9)_utblnbd.sat_$C(9)_utblnbd.sun_$C(9)_utblnbd.mon_$C(9)_utblnbd.tue_$C(9)_utblnbd.wed

	if ZCAL.piece(9.char(), (DATE # 7) + 2) quit 0
	if %CACHE("UTBLNBD1").isDefined("UTBLNBD1", "CAL,DATE") quit 0
	quit 1
	

public NBD(STD,NBD,OPT,CAL)	// Returns next business date
	/*
	Returns date corresponding to # of specified
	business dates after specified date.
	
	NOTE:	If STD is a business day and NBD is 1 the routine will
		return the same day. If STD is a non-business date NBD
		will return the next business date. Therefore to return
		the next business date in all cases you will need to
		pass your start date plus 1.
	
	KEYWORDS: Date and Time
	
	ARGUMENTS:
		. STD	Start date			/TYP=D/NOREQ
	
		. NBD	Number of business days		/TYP=T/NOREQ
	
		. OPT	Calculation option		/TYP=N/NOREQ
	          	0 = Use start date
	          	1 = Beginning of month that
	          	    start date is in
	
		. CAL	Non-business date calendar	/TYP=T/NOREQ
	
	RETURNS:
		. $$	Next business date		/TYP=D
	
	EXAMPLE:
	   	S DATE=$$NBD^UNBD(TJD,7,0,CAL)
	*/

	type public String cache(,,,)

	new CNT,INC,JD,X

	if '$G(STD) set STD=%SystemDate
	if '$G(NBD) set NBD=1
	
	if $G(CAL)="" set CAL="IBS"
	if $G(OPT) set STD=$$BOMJD^SCADAT(STD,1)
	
	set X = cache("UNBD", STD, NBD, CAL).get()
	if 'X.isNull() quit X
	
	set CNT=NBD
	set INC=$S(NBD>0:1,1:-1)
	
	for JD=STD:INC if $$BD(JD,CAL) set CNT=CNT-INC if 'CNT quit 

	if (cache("UNBD").get() > 100) kill cache("UNBD")
	set cache("UNBD") = cache("UNBD").get() + 1
	set cache("UNBD", STD, NBD, CAL) = JD

	quit JD
	
	
public PRBD(DATE,NBD,CAL)	// Return prior business date

	/*
	Return a given number of business days PRIOR to the date passed in
	
	KEYWORDS: Date and Time
	
	ARGUMENTS:
		. DATE	The date of origin				/TYP=D/REQ
	
		. NBD	The number of business days to return		/TYP=N/NOREQ
	
		. CAL	The calendar to interrogate			/TYP=T/NOREQ
	
	RETURNS:
		. $$	The previous business date			/TYP=D
	
	EXAMPLE:
		S EFD=$$PRBD^UNBD(TJD,5,CAL)
	*/

	new COUNTER

	if '$G(DATE) set DATE=%SystemDate
	if '$G(NBD) set NBD=1
	if $G(CAL)="" set CAL="IBS"

	set COUNTER=NBD

	for  do { quit:'COUNTER 
		set DATE=DATE-1
		if $$BD(DATE,CAL) set COUNTER=COUNTER-1
		}

	quit DATE