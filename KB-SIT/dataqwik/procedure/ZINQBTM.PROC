//DO NOT MODIFY  Inquiry Balance Term Main|ZINQBTM|||||||1
ZINQBTM
	/*
	 ORIG: 1 - 15/11/2013
	 DESC: 

	 ---- Comments --------------------------------------------------------

	 ---- Revision History ------------------------------------------------
	 16 Dec 2013 Ravipong Chumsaiset 
	  Consider using setAuditFlag for all objects in this procedure
	   example :do dep.setAuditFlag(1)

	*/

MAIN(FLG,IM,OM,ERRCD,ERRDESC)

	type String ZIM,ZOM,ZERRDESC,ZARRIN,ZARROUT,RM
	type Number ZERRCD,ZFLG,ER,IsAsterisk
	set ER=0
	set (ZIM,ZOM,ZERRDESC,RM)=""
	set (ZERRCD,ZFLG)=""
	set ZIM=IM
	set ZFLG=FLG
	set IsAsterisk=0
	//type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	do {

		catch ZinqBTM {
			set ER = 1
			set RM = ZinqBTM.description
			set ZERRCD="E9999"
			set ZERRDESC="UNABLE TO PROCESS - OTHER ERROR"

		}

		do FAPIN(ZFLG,.ZIM,.ZOM,.ZERRCD,.ZERRDESC)
		do PROC
		do FAPOUT(ZFLG,.ZOM,.ZERRCD,.ZERRDESC)
		write !,"ZOM "_ZOM
	}

	set OM=ZOM
	set ERRCD=ZERRCD
	set ERRDESC=ZERRDESC


	quit ""

FAPIN(ZFLG,ZIM,ZOM,ZERRCD,ZERRDESC)

	if ZFLG=1 do DELIMIN(ZFLG,.ZIM,.ZOM,.ZERRCD,.ZERRDESC)
	if ZFLG=2 do FIXIN(ZFLG,.ZIM,.ZOM,.ZERRCD,.ZERRDESC)

	quit

FAPOUT(ZFLG,ZOM,ZERRCD,ZERRDESC)

	if ZFLG=1 do DELIMOUT(.ZOM,.ZERRCD,.ZERRDESC)
	if ZFLG=2 do FIXOUT(.ZOM,.ZERRCD,.ZERRDESC)

	quit

DELIMOUT(ZOM,ZERRCD,ZERRDESC)

	//Error Segment
	type String ZERSEG
	set ZERSEG="["_ZARROUT("ErrorAppId").get()_";;"_ZARROUT("ErrorAppAbbrv").get()_";;"_ZARROUT("ErrorCode").get()
	set ZERSEG=ZERSEG_";;"_ZARROUT("ErrorDesc").get()_";;"_ZARROUT("ErrorSeverity").get()_"]"

	if (ZERRCD.get())'="" do {
		set ZOM.piece(":;",1)=ZARROUT("FuncNm").get()
		set ZOM.piece(":;",2)=ZARROUT("RqUID").get()
		set ZOM.piece(":;",3)=ZARROUT("RsAppId").get()
		set ZOM.piece(":;",4)=ZARROUT("RsUID").get()
		set ZOM.piece(":;",5)=ZARROUT("RsDt").get()
		set ZOM.piece(":;",6)=ZARROUT("StatusCode").get()
		set ZOM.piece(":;",7)=ZERSEG
		set ZOM=ZOM_":;"_ZARROUT("CorrID").get()
		set ZOM=ZOM_":;"_ZARROUT("ReqAuthUserId").get()
		set ZOM=ZOM_":;"_ZARROUT("ReqAuthLevel").get()
		//set ZOM.piece(":;",8)=ZARROUT("CorrID").get()
		set ZOM=ZOM_":;"

	}
	else do {


		set ZOM.piece(":;",1)=ZARROUT("FuncNm").get()
		set ZOM.piece(":;",2)=ZARROUT("RqUID").get()
		set ZOM.piece(":;",3)=ZARROUT("RsAppId").get()
		set ZOM.piece(":;",4)=ZARROUT("RsUID").get()
		set ZOM.piece(":;",5)=ZARROUT("RsDt").get()
		set ZOM.piece(":;",6)=ZARROUT("StatusCode").get()
		set ZOM.piece(":;",7)="[]"
		set ZOM=ZOM_":;"_ZARROUT("CorrID").get()
		set ZOM=ZOM_":;"_ZARROUT("ReqAuthUserId").get()
		set ZOM=ZOM_":;"_ZARROUT("ReqAuthLevel").get()
		//set ZOM.piece(":;",8)=ZARROUT("CorrID").get()
		set ZOM=ZOM_":;"

		set ZOM.piece(":;",12)=ZARROUT("AcctId").get()
		set ZOM.piece(":;",13)=ZARROUT("AcctNameTh").get()
		set ZOM.piece(":;",14)=ZARROUT("AcctNameEn").get()
		set ZOM.piece(":;",15)=ZARROUT("AcctStatus").get()
		set ZOM.piece(":;",16)=ZARROUT("AcctStatusDesc").get()
		set ZOM.piece(":;",17)=ZARROUT("Curcode").get()
		set ZOM.piece(":;",18)=ZARROUT("DomBranchId").get()
		set ZOM.piece(":;",19)=ZARROUT("BranchName").get()
		set ZOM.piece(":;",20)=ZARROUT("KBankProductCode").get()
		set ZOM.piece(":;",21)=ZARROUT("KBankProductCodeDesc").get()
		set ZOM.piece(":;",22)=ZARROUT("TCBTrfName").get()
		set ZOM.piece(":;",23)=ZARROUT("ClosedDt").get()
		set ZOM.piece(":;",24)=ZARROUT("AppntBalPassbk").get().zero(1,2,0,0)
		set ZOM.piece(":;",25)=ZARROUT("AcctBal").get().zero(1,2,0,0)
		set ZOM.piece(":;",26)=ZARROUT("RetentionAmt").get().zero(1,2,0,0)
		set ZOM.piece(":;",27)=ZARROUT("AccrueIntAmt").get().zero(1,2,0,0)
		set ZOM.piece(":;",28)=ZARROUT("SimulatedIntAmt").get().zero(1,2,0,0)		//p'new
		set ZOM.piece(":;",29)=ZARROUT("AvailBal").get().zero(1,2,0,0)
		set ZOM.piece(":;",30)=ZARROUT("LendingAcctLinked").get()
		set ZOM.piece(":;",31)=$$PADDING(ZARROUT("TotalNumOfTerm").get(),2,3)
		set ZOM.piece(":;",32)=""
	}

	quit

DELIMIN(ZFLG,ZIM,ZOM,ZERRCD,ZERRDESC)

	type String ZFUNCNM,ZRQUID,ZRQDT,ZRQAPPID,ZUSERID,ZTERMID,ZULANG,ZCORRID,ZAUTHUID,ZAUTHLV,ZCID
	set ZARRIN("FuncNm")=ZIM.piece(":;",1)
	set ZARRIN("RqUID")=ZIM.piece(":;",2)
	set ZARRIN("RqDt")=ZIM.piece(":;",3)
	set ZARRIN("RqAppId")=ZIM.piece(":;",4)
	set ZARRIN("UserId")=ZIM.piece(":;",5)
	set ZARRIN("TerminalId")=ZIM.piece(":;",6)
	set ZARRIN("UserLangPref")=ZIM.piece(":;",7)
	set ZARRIN("CorrID")=ZIM.piece(":;",8)
	set ZARRIN("AuthUserId")=ZIM.piece(":;",9)
	set ZARRIN("AuthLevel")=ZIM.piece(":;",10)
	set ZARRIN("Filler")=ZIM.piece(":;",11)
	set ZARRIN("AcctId")=ZIM.piece(":;",12)



	quit

PROC
	//***Init***
	// Time Stamp
	// Ex. ZDATE=$$DTSTAMP()
	// ZDATE >> 2013-12-02T17:37:57.45+07:00

	do SYSVAR^SCADRV0()
	type RecordCUVAR cuvar=Db.getRecord("CUVAR")


	type String ZSTAMP,ZTIM,ZDAT,ZLangPref
	set ZLangPref=""
	set (ZSTAMP,ZTIM,ZDAT)=""

	type Number MICSEC,isTh,ZSKIP
	set ZSKIP=0
	set isTh=1
	set MICSEC=""

	set MICSEC=$$GETTIM^%ZFUNC()
	set MICSEC=MICSEC.extract(MICSEC.length()-6,MICSEC.length()-5)

	set ZDAT=$$DAT^%ZM(%CurrentDate,"YEAR-MM-DD")
	set ZTIM=$$TIM^%ZM(%CurrentTime,"24:60:SS")
	set ZSTAMP=ZDAT_"T"_ZTIM_"."_MICSEC_"+07:00"
	//

	//Header
	set ZARROUT("FuncNm")=ZARRIN("FuncNm").get()
	set ZARROUT("RqUID")=ZARRIN("RqUID").get()
	set ZARROUT("RsAppId")=cuvar.zappid

	//p'new
	set ZARROUT("RsUID")=ZARRIN("RqUID").get()

	set ZARROUT("RsDt")=ZDAT_"T"_ZTIM_"."_MICSEC_"+07:00"
	//set ZARROUT("StatusCode")=ZARRIN("TerminalId").get()
	/*
	set ZARROUT("Error")=ZARRIN("UserLangPref").get()
	set ZARROUT("ErrorAppId")=ZARRIN("CorrID").get()
	set ZARROUT("ErrorAppAbbrv")=ZARRIN("AuthUserId").get()
	set ZARROUT("ErrorCode")=ZARRIN("AuthLevel").get()
	set ZARROUT("ErrorDesc")=ZARRIN("ErrorDesc").get()
	set ZARROUT("ErrorSeverity")=ZARRIN("ErrorSeverity").get()
	*/
	set ZARROUT("CorrID")=ZARRIN("CorrID").get()
	//
	//
	//Validate Common Header
	//if ZARRIN("FuncNm ").get().isNull() set ZERRCD="E9999",ZERRDESC="FuncNm field is Null"
	if (ZARRIN("FuncNm").get()'="retrieveComTermAcctBal")!(ZARRIN("FuncNm").get().isNull()) set ZERRCD="E9999",ZERRDESC="Invalid FuncNm"
	if $G(ZARRIN("RqUID")).isNull() set ZERRCD="E0014"
	if $G(ZARRIN("RqDt")).isNull() set ZERRCD="E0016"
	if ($G(ZARRIN("RqAppId")).isNull()) set ZERRCD="E0038"
	if $G(ZARRIN("UserId")).isNull() set ZERRCD="E0017"
	if ($G(ZARRIN("AcctId")).length()'=10) set ZERRCD="E0002"

	set ZLangPref=$G(ZARRIN("UserLangPref")).upperCase()
	if ZLangPref'="TH" do {
		if ZLangPref="EN" set isTh=0
		else if ZLangPref="" quit
		else set ZERRCD="E0011"
	}

	if '(ZERRCD.get()).isNull() set ZSKIP=1
	if $G(ZARRIN("AcctId")).isNull() set ZERRCD="E0002",ZSKIP=1
	set AcctId = +ZARRIN("AcctId").get()
	if 'ZSKIP do {
		if 'Db.isDefined("DEP","CID=:AcctId") do {
			set ZERRCD="E0002",ZERRDESC="ACCOUNT DOES NOT EXIST"
			//error
		}
		else do {
			//** Some balances will display with symbol asterisk "*",for the following conditions **
			//1.If inquirers are not HR or not customers and input account is a salary account
			//2.If inquirers are HR and input account is not a salary account
			//***

			type RecordDEP DEP=Db.getRecord("DEP","CID=:AcctId")
			if DEP.grp'="CD" set ZERRCD="E0030" quit

			set ZARROUT("AcctId")=DEP.CID
			set ZARROUT("AcctNameTh")=DEP.ZACTNAM
			set ZARROUT("AcctNameEn")=DEP.ZEACTNAM
			if DEP.STAT=0 set ZARROUT("AcctStatus")=4,ZARROUT("AcctStatusDesc")="ACTIVE"
			if DEP.STAT=4 set ZARROUT("AcctStatus")=7,ZARROUT("AcctStatusDesc")="CANCELLED"

			set ZARROUT("Curcode")=DEP.CRCD
			set ZARROUT("DomBranchId")=DEP.BOO
			set ZARROUT("KBankProductCode")=DEP.ZPRODCD

			type String BranchName,KBankPRDESC
			set BranchName=""
			set KBankPRDESC=""
			if isTh do {

				type ResultSet ZUBRCD = Db.select("DESC","UTBLBRCD","BRCD=:DEP.BOO")
				if ZUBRCD.next() set BranchName=ZUBRCD.getCol(1)
				set ZARROUT("BranchName")=BranchName


				type ResultSet ZUTBLKBDES = Db.select("DES","ZUTBLKBDES","CD=:DEP.ZPRODCD")
				if ZUTBLKBDES.next() set KBankPRDESC = ZUTBLKBDES.getCol(1)
				set ZARROUT("KBankProductCodeDesc")=KBankPRDESC
			}
			else do {
				type ResultSet ZUBRCD = Db.select("ENGNAM","ZUTBLBRCD","BRCD=:DEP.BOO")
				if ZUBRCD.next() set BranchName=ZUBRCD.getCol(1)
				set ZARROUT("BranchName")=BranchName

				type ResultSet ZUTBLKBDES = Db.select("EDES","ZUTBLKBDES","CD=:DEP.ZPRODCD")
				if ZUTBLKBDES.next() set KBankPRDESC = ZUTBLKBDES.getCol(1)
				set ZARROUT("KBankProductCodeDesc")=KBankPRDESC

			}



			set PRODDFTDDESC=""
			type ResultSet PRODDFTD = Db.select("DES","PRODDFTD","TYPE=:DEP.TYPE")
			if PRODDFTD.next() set PRODDFTDDES = PRODDFTD.getCol(1)
			set ZARROUT("TCBTrfName")=PRODDFTDDES
			if DEP.STAT=4 set ZARROUT("ClosedDt")=DEP.DTC.toString("YYYY-MM-DD")
			set ZARROUT("AppntBalPassbk")=DEP.PBKBAL
			if DEP.STAT=0 do {
				set ZARROUT("AcctBal")=DEP.ZBAL

			}
			set ZARROUT("RetentionAmt")=DEP.ZHLDAMT+DEP.ZCHKHLD


			set ZARROUT("AccrueIntAmt")=DEP.ZACR
			set ZARROUT("SimulatedIntAmt")="000000000000000000"
			set ZARROUT("AvailBal")=DEP.ZBALAVL
			//set ZARROUT("LendingAcctLinked")=
			set ZARROUT("TotalNumOfTerm")=DEP.ZSUBSEQ


			//Pad number string :Profile Web Service Guide 20121212
			set ZARROUT("AcctId")=$$PADDING(ZARROUT("AcctId").get(),2,10)
			set ZARROUT("DomBranchId")=$$PADDING(ZARROUT("DomBranchId").get(),2,4)
			set ZARROUT("LendingAcctLinked")=$$PADDING(ZARROUT("LendingAcctLinked").get(),2,10)

		}
	}


	if (ZERRCD.get()).isNull() do {
		set ZARROUT("StatusCode")="00"


	}
	else do {
		set ZARROUT("StatusCode")="10"
		//set ZARROUT("ErrorAppId")="668"
		set ZARROUT("ErrorAppId")=cuvar.zappid

		set ZARROUT("ErrorAppAbbrv")="PCB"
		set ZARROUT("ErrorCode")=ZERRCD
		type ResultSet zerdesc = Db.select("ERRDESC","ZUTBLITFERCD","ERRCD=:ZERRCD")
		while zerdesc.next() do {
			set ZARROUT("ErrorDesc")=zerdesc.getCol(1)
		}
		//set ZARROUT("ErrorDesc")=ZARRIN("ErrorDesc").get()
		set ZARROUT("ErrorSeverity")="02"
	}

	quit


FIXIN(ZFLG,ZIM,ZOM,ZERRCD,ZERRDESC)


	set ZARRIN("FuncNm")=ZIM.extract(1,30).trim()
	set ZARRIN("RqUID")=ZIM.extract(31,77).trim()
	set ZARRIN("RqDt")=ZIM.extract(78,110).trim()
	set ZARRIN("RqAppId")=ZIM.extract(111,115).trim()
	set ZARRIN("UserId")=ZIM.extract(116,147).trim()
	set ZARRIN("TerminalId")=ZIM.extract(148,155).trim()
	set ZARRIN("UserLangPref")=ZIM.extract(156,157).trim()
	set ZARRIN("CorrID")=ZIM.extract(158,189).trim()
	set ZARRIN("AuthUserId")=ZIM.extract(190,204).trim()
	set ZARRIN("AuthLevel")=ZIM.extract(205,207).trim()
	set ZARRIN("Filler")=ZIM.extract(208,239).trim()
	set ZARRIN("AcctId")=ZIM.extract(240,249).trim()



	quit

FIXOUT(ZOM,ZERRCD,ZERRDESC)

	if '(ZERRCD.get()).isNull() do {
		type String ZERRSEG
		set ZERRSEG=""
		set ZERRSEG=ZERRSEG_$$PADDING(ZARROUT("ErrorAppId").get(),1,5)
		set ZERRSEG=ZERRSEG_$$PADDING(ZARROUT("ErrorAppAbbrv").get(),1,5)
		set ZERRSEG=ZERRSEG_$$PADDING(ZARROUT("ErrorCode").get(),1,30)
		set ZERRSEG=ZERRSEG_$$PADDING(ZARROUT("ErrorDesc").get(),1,256)
		set ZERRSEG=ZERRSEG_$$PADDING(ZARROUT("ErrorSeverity").get(),1,2)
		set ZERRSEG=ZERRSEG_$J("",2682)
	}
	else do {
		type String ZERRSEG
		set ZERRSEG=$J("",2980)
		set ZOM=ZOM_$$PADDING(ZARROUT("FuncNm").get(),1,30)
		set ZOM=ZOM_$$PADDING(ZARROUT("RqUID").get(),1,47)
		set ZOM=ZOM_$$PADDING(ZARROUT("RsAppId").get(),1,5)
		set ZOM=ZOM_$$PADDING(ZARROUT("RsUID").get(),1,47)
		set ZOM=ZOM_$$PADDING(ZARROUT("RsDt").get(),1,33)
		set ZOM=ZOM_$$PADDING(ZARROUT("StatusCode").get(),1,2)
		set ZOM=ZOM_$$PADDING(ZERRSEG.get(),1,298)

		//Translate to MainFrame

		set ZARROUT("AccrueIntAmt")=$$PADDING(ZARROUT("AccrueIntAmt").get(),3,"")
		set ZARROUT("LimitAmt")=$$PADDING(ZARROUT("LimitAmt").get(),3,"")
		set ZARROUT("AppntBalPassbk")=$$PADDING(ZARROUT("AppntBalPassbk").get(),3,"")
		//set ZARROUT("ClearingAmt")=$$PADDING(ZARROUT("ClearingAmt").get(),3,"")
		set ZARROUT("RetentionAmt")=$$PADDING(ZARROUT("RetentionAmt").get(),3,"")

		if 'IsAsterisk do {
			set ZARROUT("AvailBal")=$$PADDING(ZARROUT("AvailBal").get(),3,"")
			set ZARROUT("AcctBal")=$$PADDING(ZARROUT("AcctBal").get(),3,"")

		}

		set ZOM=ZOM_$$PADDING(ZARROUT("AcctId").get(),2,10)
		set ZOM=ZOM_$$PADDING(ZARROUT("AcctNameTh").get(),1,180)
		set ZOM=ZOM_$$PADDING(ZARROUT("AcctNameEn").get(),1,180)
		set ZOM=ZOM_$$PADDING(ZARROUT("AcctStatus").get(),1,1)
		set ZOM=ZOM_$$PADDING(ZARROUT("AcctStatusDesc").get(),1,15)
		set ZOM=ZOM_$$PADDING(ZARROUT("Curcode").get(),1,3)
		set ZOM=ZOM_$$PADDING(ZARROUT("DomBranchId").get(),1,4)
		set ZOM=ZOM_$$PADDING(ZARROUT("BranchName").get(),1,50)
		set ZOM=ZOM_$$PADDING(ZARROUT("KBankProductCode").get(),1,9)
		set ZOM=ZOM_$$PADDING(ZARROUT("KBankProductCodeDesc").get(),1,255)
		set ZOM=ZOM_$$PADDING(ZARROUT("TCBTrfName").get(),1,60)
		set ZOM=ZOM_ZARROUT("RetentionAmt").get()
		set ZOM=ZOM_ZARROUT("ClearingAmt").get()
		set ZOM=ZOM_ZARROUT("HoldAmt").get()
		set ZOM=ZOM_$$PADDING(ZARROUT("AllowFlag").get(),1,1)
		set ZOM=ZOM_$$PADDING(ZARROUT("BlockInd").get(),1,1)
		set ZOM=ZOM_ZARROUT("LimitAmt").get()
		set ZOM=ZOM_ZARROUT("ODLimitAmt").get()
		set ZOM=ZOM_ZARROUT("ENCLimitAmt").get()
		set ZOM=ZOM_ZARROUT("IntradayLimitAmt").get()
		set ZOM=ZOM_ZARROUT("AppntBalPassbk").get()
		set ZOM=ZOM_$$PADDING(ZARROUT("AcctBal").get(),1,18)
		set ZOM=ZOM_$$PADDING(ZARROUT("AvailBal").get(),1,18)
		set ZOM=ZOM_$$PADDING(ZARROUT("RefAcctId").get(),2,10)
		set ZOM=ZOM_$$PADDING(ZARROUT("RefAcctBal").get(),1,18)
		set ZOM=ZOM_$$PADDING(ZARROUT("LastFncDt").get(),1,10)
		set ZOM=ZOM_$$PADDING(ZARROUT("ClosedDt").get(),1,10)
		set ZOM=ZOM_ZARROUT("AccrueIntAmt").get()
		set ZOM=ZOM_$$PADDING(ZARROUT("RefBranchId").get(),1,4)
		set ZOM=ZOM_$$PADDING(ZARROUT("RefBranchName").get(),1,50)
		set ZOM=ZOM_$$PADDING(ZARROUT("RefProductId").get(),1,9)
		set ZOM=ZOM_$$PADDING(ZARROUT("RefProductName").get(),1,255)
		set ZOM=ZOM_ZARROUT("LimitUsed").get()
		set ZOM=ZOM_ZARROUT("ODLimitUsed").get()
		set ZOM=ZOM_ZARROUT("ENCLimitUsed").get()
		set ZOM=ZOM_ZARROUT("IntradayLimitUsed").get()
		set ZOM=ZOM_ZARROUT("AvailLimitAmt").get()
		set ZOM=ZOM_ZARROUT("AvailODLimitAmt").get()
		set ZOM=ZOM_ZARROUT("AvailENCLimitAmt").get()
		set ZOM=ZOM_ZARROUT("AvailIntradayLimitAmt").get()

		quit

PADDING(array,flg,fixL)

	type String out
	type Number zlength
	set out=""

	//Blank padding
	if flg=1 do {
		type String in
		set in=array.get()
		set zlength=in.length()
		set out=in_$J("",fixL-zlength)
		//set out=in_$J("""",fixL-zlength)

	}
	//Zero padding
	if flg=2 do {
		type Number in
		set in=array.get()
		set zlength=in.length()
		set out=in.zero(fixL)
	}
	//MainFrame
	if flg=3 do {
		type Number in,ZER
		type String ZRM
		set ZER=0
		set ZRM=""
		set in=array.get()*100
		do CONVENC^ZITFUTL(1,in,.out,.ZER,.ZRM)
	}
	quit out

CHECKPOINT

	quit

ZCREJMSG(ZFLG,ZIM,ZOM,ZSTATCD,ZERRCD)

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set ZARRIN("FuncNm")=ZIM.piece(":;",1)
	set ZARRIN("RqUID")=ZIM.piece(":;",2)
	set ZARRIN("RqDt")=ZIM.piece(":;",3)
	set ZARRIN("RqAppId")=ZIM.piece(":;",4)
	set ZARRIN("UserId")=ZIM.piece(":;",5)
	set ZARRIN("TerminalId")=ZIM.piece(":;",6)
	set ZARRIN("UserLangPref")=ZIM.piece(":;",7)
	set ZARRIN("CorrID")=ZIM.piece(":;",8)
	set ZARRIN("AuthUserId")=ZIM.piece(":;",9)
	set ZARRIN("AuthLevel")=ZIM.piece(":;",10)
	set ZARRIN("Filler")=ZIM.piece(":;",11)
	set ZARRIN("AcctId")=ZIM.piece(":;",12)

	set ZARROUT("StatusCode")=ZSTATCD
	set ZARROUT("ErrorAppId")=cuvar.zappid
	set ZARROUT("ErrorAppAbbrv")="PCB"
	set ZARROUT("ErrorCode")=ZERRCD
	type ResultSet zerdesc = Db.select("ERRDESC","ZUTBLITFERCD","ERRCD=:ZERRCD")
	while zerdesc.next() do {
		set ZARROUT("ErrorDesc")=zerdesc.getCol(1)
	}
	//set ZARROUT("ErrorDesc")=ZARRIN("ErrorDesc").get()
	set ZARROUT("ErrorSeverity")="02"

	//Error Segment
	type String ZERSEG
	set ZERSEG="["_ZARROUT("ErrorAppId").get()_";;"_ZARROUT("ErrorAppAbbrv").get()_";;"_ZERRCD.get()
	set ZERSEG=ZERSEG_";;"_ZARROUT("ErrorDesc").get()_";;"_ZARROUT("ErrorSeverity").get()_"]"

	if (ZERRCD.get())'="" do {

		set ZOM.piece(":;",1)=ZARROUT("FuncNm").get()
		set ZOM.piece(":;",2)=ZARROUT("RqUID").get()
		set ZOM.piece(":;",3)=ZARROUT("RsAppId").get()
		set ZOM.piece(":;",4)=ZARROUT("RsUID").get()
		set ZOM.piece(":;",5)=ZARROUT("RsDt").get()
		if ZSTATCD.get()="" set ZSTATCD="10"
		set ZOM.piece(":;",6)=ZSTATCD
		set ZOM.piece(":;",7)=ZERSEG
		set ZOM=ZOM_":;"_ZARROUT("CorrID").get()
		set ZOM=ZOM_":;"_ZARROUT("ReqAuthUserId").get()
		set ZOM=ZOM_":;"_ZARROUT("ReqAuthLevel").get()
		//set ZOM.piece(":;",8)=ZARROUT("CorrID").get()
		set ZOM=ZOM_":;"

	}

	quit