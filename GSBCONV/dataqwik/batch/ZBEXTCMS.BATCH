//DO NOT MODIFY  Extract Collateral-Related CIF|ZBEXTCMS||||||ZCOL||8|100|32000||0|10000|10000|10|10|0||0||0
---------- REVHIST ------ Section marker

/*
ORIG: Ravipong Chumsai Na Ayuthaya - 15/12/2011
DESC: Batch for CMS Convertion-Extraction
	
*/
---------- OPEN    ------ Section marker

	//kill ^TMP("ZEXTCMS")
---------- SCHINIT ------ Section marker

---------- SCHEXEC ------ Section marker

---------- SCHPOST ------ Section marker

---------- SCHEXIT ------ Section marker

	
---------- THRINIT ------ Section marker

---------- THREXEC ------ Section marker

---------- EXEC    ------ Section marker

	do Runtime.rollback()
	do RUN(COLL)
	quit
	
RUN(COLL)
	
	new ZCHK,EXIT,ZBREAK,ZCID,ZACN,EXIT
	set (ZCHK,EXIT)=0
	//set ZACN=ACN
	
	set ZTAB=$C(9)
	set ZENTER=$C(13)
	set ZPROBLEM=$C(10)
	
	
	//
	
	type RecordZCOL zcol = Db.getRecord("ZCOL","COLL=COLL")
	set ZCID=zcol.cid
	set ZACN=zcol.pacn
	if (zcol.coltyp=99) quit
	if zcol.coltyp=7 do { 
		if (zcol.BOTCODE=286061)!(zcol.BOTCODE=286062)!(zcol.BOTCODE=286068)!(zcol.BOTCODE=286072)!(zcol.BOTCODE=286076) set EXIT=1 quit 
		if ^ZCONV("ACN",ZACN).data() quit
		do ZACN(ZACN)
	}
	
	if zcol.coltyp=4 do {
		if ZCID'="" do ZCID^ZBCONVCN(ZCID)
		type ResultSet typ4 = Db.select("ACN","RELACN","CID=:ZCID")
		while typ4.next() do {
			set ZACN=typ4.getCol(1)
			if ^ZCONV("ACN",ZACN).data() quit
			do ZACN(ZACN)
		}
	}
	
	if zcol.coltyp=14 do {
		set ZCID=zcol.zcertcid
		if ZCID'="" do ZCID^ZBCONVCN(ZCID)
		type ResultSet typ14 = Db.select("ACN","RELACN","CID=:ZCID")
		while typ14.next() do {
			set ZACN=typ14.getCol(1)
			if ^ZCONV("ACN",ZACN).data() quit
			do ZACN(ZACN)
		}
	}
	if EXIT quit
	type ResultSet zown = Db.select("ACN","ZCOLOWNLINK","COLL=:COLL")
	while zown.next() do {
		set ZACN=zown.getCol(1)
		if ^ZCONV("ACN",ZACN).data() quit
		do ZACN(ZACN)
	}
	
	quit


ZACN(ZACN)	
		
		//if ^ZCONV("ACN",ZACN).data() quit

		set ZTAB=$C(9)
		set ZENTER=$C(13)
		set ZPROBLEM=$C(10)

		type RecordCIF cif = Db.getRecord("CIF","ACN=:ZACN")
		set output.piece("|",1) = cif.acn
		set output.piece("|",2) = cif.ZTITLE
		set output.piece("|",3) = cif.FNAME
		set output.piece("|",4) = cif.LNM
		set output.piece("|",5) = cif.MNAME
		set output.piece("|",6) = cif.ZCIZID

		set output.piece("|",7) = cif.TAXID
		set output.piece("|",8) = cif.PAD1
		set output.piece("|",9) = cif.PAD2
		set output.piece("|",10) = cif.PAD3
		set output.piece("|",11) = cif.ZPSDISCD
		set output.piece("|",12) = cif.PCITY
		set output.piece("|",13) = cif.pstate
		set output.piece("|",14) = cif.pcntry
		set output.piece("|",15) = cif.pzip

		set output.piece("|",16) = cif.HPH
		set output.piece("|",17) = cif.APH
		set output.piece("|",18) = cif.BPH
		set output.piece("|",19) = cif.BPHEXT
		set output.piece("|",20) = cif.ZJIN
		set output.piece("|",21) = cif.mad1
		set output.piece("|",22) = cif.mad2
		set output.piece("|",23) = cif.mad3

		set output.piece("|",24) = cif.ZMSDISCD
		set output.piece("|",25) = cif.mcity
		set output.piece("|",26) = cif.mstate
		set output.piece("|",27) = cif.mcntry
		set output.piece("|",28) = cif.mzip
		set output.piece("|",29) = cif.zoad1
		set output.piece("|",30) = cif.zoad2
		set output.piece("|",31) = cif.zoad3

		set output.piece("|",32) = cif.ZOSDISCD
		set output.piece("|",33) = cif.zocity
		set output.piece("|",34) = cif.zostate
		//Missing 
		set output.piece("|",35) = cif.zocntry
		set output.piece("|",36) = cif.zozip
		set output.piece("|",37) = cif.mar
		set output.piece("|",38) = cif.sex
		set output.piece("|",39) = cif.dob.toString("YEAR-MM-DD")
		set output.piece("|",40) = cif.FAXNUM
		set output.piece("|",41) = cif.EMAIL
		set output.piece("|",42) = cif.ZKTBCCODE
		set output.piece("|",43)  = $$GET^ZCMSREPL("DESC,ZUTBLKTBCUST,KTBCCODE,"_cif.ZKTBCCODE)
		set output.piece("|",44)  = cif.PERS
		if (cif.PASNUM="") set output.piece("|",45)=" "
		else set output.piece("|",45)  = cif.PASNUM
			
		//type RecordTMPRPT1 zextcms =Class.new("RecordTMPRPT1")
	
		if output[ZENTER  set output=$TR(output,ZENTER," ")
		if output[ZTAB    set output=$TR(output,ZTAB," ")
		if output[ZPROBLEM set output=$TR(output,ZPROBLEM," ")
		if output[$C(34) set output=$TR(output,$C(34)," ")
			
		set ^ZCONV("ACN",ZACN)=output
	
	
	
	quit
	
---------- THREXIT ------ Section marker
