//DO NOT MODIFY  TEST JA|ZTEST|||||||1
	/*
	 ORIG: 1 - 01/01/2008
	 DESC: 
	
	 ---- Comments --------------------------------------------------------
	
	 ---- Revision History ------------------------------------------------
	
	 ****** Consider using setAuditFlag for all objects in this procedure
	   example :do dep.setAuditFlag(1)
	
	*/


	if A.get()'="" W "DOG",!
	else  if B.get()'="" W "DOGGA",!
	else  write "DOGGU",!

salak
	type RecordTTX ttx=Db.getRecord("TTX","TJD=61867,BRCD=42,UID=1004203,TSEQ=12001")
 	write "ttx="_ttx.tim_"|"_$$TIM^%ZM(ttx.tim)
 	type RecordZLALLCHH chh=Db.getRecord("ZLALLCHH","1,646")
 	write !,"chh="_chh.time_"|"_$$TIM^%ZM(chh.time)
 	set ztime=$$TIM^%ZM(chh.time)
 	write !,"convert="_ztime_"|"_$$FTIM^%ZM(ztime)
 	type ResultSet rs=Db.select("TJD,BRCD,UID,TSEQ","TTX","TJD=61867 and (tim between :chh.time and :chh.time+1) and UID=1004203")
 	if rs.isEmpty() write !,"EMPTY"
 	if rs.next() do {
 		write !,"get="_rs.getCol(1)_rs.getCol(2)_rs.getCol(3)_rs.getCol(4)
 	}
 	quit

hold
	type Public IO io=Class.new("IO")
        set io.fileName="HLD2.TXT"
        set io.directory=$$TRNLNM^%ZFUNC("SCAU_SPOOL_EXTF")
        set io.recordSize=400
        set io.openParams="WRITE/NEWV"
        do io.open()
	type ResultSet rshld=Db.select("CID,CCID,SEQ","ZPSCHLD","SEQ=1")
	while rshld.next() do {
		if 'Db.isDefined("ZCERT","CID=:rshld.getCol(1),CCID=:rshld.getCol(2)") quit
		else  do {
			type RecordZCERT zcert=Db.getRecord("ZCERT","CID=:rshld.getCol(1),CCID=:rshld.getCol(2)")
			if zcert.stat=0 do {	
			do io.write("CID="_zcert.cid_",CCID="_zcert.ccid_",STAT="_zcert.stat_",PSTAT="_zcert.pstat)
			}
		//write !,"CID="_zcert.cid_",CCID="_zcert.ccid_",PERIOD="_zcert.period_",GRP="_zcert.grp_",LOTL="_zcert.lotl_",LOTH="_zcert.loth_",STAT="_zcert.stat_",PSTAT="_zcert.pstat
		}
	}
	set IOTYP="RMS"
        do io.close()
	quit

hold2
	type ResultSet rs=Db.select("GRP,CID,CCID,PERIOD,LOTL,LOTH,STAT,PSTAT","ZCERT","STAT=5")
	while rs.next() do {
		type ResultSet rsmap=Db.select("CID,CCID,SEQ","ZPSCHLD","CID=:rs.getCol(2) AND CCID=:rs.getCol(3)")
		if rsmap.isEmpty() do {
			write !,"CID="_rs.getCol("CID")_",CCID="_rs.getCol("CCID")_",PERIOD="_rs.getCol("PERIOD")_",GRP="_rs.getCol("GRP")_",LOTL="_rs.getCol("LOTL")_",LOTH="_rs.getCol("LOTH")_",STAT="_rs.getCol("STAT")_",PSTAT="_rs.getCol("PSTAT")
		}
	}
	quit

updateHold
	type Public IO io=Class.new("IO")
        set io.fileName="UPHLD.TXT"
        set io.directory=$$TRNLNM^%ZFUNC("SCAU_SPOOL_EXTF")
        set io.recordSize=400
        set io.openParams="WRITE/NEWV"
        do io.open()

        type ResultSet rshld=Db.select("CID,CCID,SEQ","ZPSCHLD","SEQ=1")
        while rshld.next() do {
                if 'Db.isDefined("ZCERT","CID=:rshld.getCol(1),CCID=:rshld.getCol(2)") quit
                else  do {
                        type RecordZCERT zcert=Db.getRecord("ZCERT","CID=:rshld.getCol(1),CCID=:rshld.getCol(2)")
                        if zcert.stat=0 do {
                        new ZSTAT
			set ZSTAT=zcert.stat.oldVal
			set zcert.stat=5
                        set zcert.pstat=ZSTAT
                        do zcert.bypassSave()
			do io.write("CID="_zcert.cid_",CCID="_zcert.ccid_",STAT="_zcert.stat_",PSTAT="_zcert.pstat)
			}
                }
        }
	set IOTYP="RMS"
        do io.close()
        quit

public PREAPP(INPUT)

	//w $$PREAPP^ZCAPCIF(x)
	new ER
	type String output
	set RM=""
	set INPUT = INPUT.piece("|",11)
	set %TOKEN="5Cn"
	do SYSVAR^SCADRV0()
	do INIT^SCADRV
	set %UID=1
	set output=""
	set return = ""

	do {

		catch error {
			set ER = 1
			//set RM = error.get()
			set RM = error.description
		}
		set output=$$^MRPC014(.return,2,"",-1,"","","",INPUT)

	}

	if RM.get() set output=RM.get()
	if ER.get() set output=RM.get()
	else set output="Account Approved"

	quit output
	
test(x)
	set a=x
	do test2()
	
	quit a
	
test2
	type a
	kill a
	quit 