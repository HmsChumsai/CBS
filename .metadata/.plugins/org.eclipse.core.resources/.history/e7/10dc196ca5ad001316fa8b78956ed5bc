//DO NOT MODIFY  Block and UnBlock info. Extract|ZBLOCKEX|||||||1


	quit

TEST(TJD,CLS,GRP,TYP,CID,TSEQ)

	type RecordDTJFM test = Db.getRecord("DTJFM","TJD,CLS,GRP,TYP,CID,TSEQ")
	do PROC(.test)

	quit



PROC(RecordDTJFM DTJ)

	type String ZTCMT
	type Boolean Z30Added,Z30Removed,Z33Added,Z33Removed
	type Date ZEXPDT,ZSTDT,ZTJD
	type Time ZTIME

	set (ZEXPDT,ZSTDT,ZTJD)=""
	set ZTIME=DTJ.TIME
	set ZTCMT=DTJ.TCMT
	set (Z30Added,Z30Removed,Z33Added,Z33Removed)=""

	if ZTCMT["Restriction 3001 added"  set Z30Added=1,ZRFCODE="3001",ZACTIVITY="ADDED"
	else if ZTCMT["Restriction 3001 removed" set Z30Removed=1,ZRFCODE="3001",ZACTIVITY="REMOVED"
	else if ZTCMT["Restriction 3301 added" set Z33Added=1,ZRFCODE="3301",ZACTIVITY="ADDED"
	else if ZTCMT["Restriction 3301 removed" set Z33Removed=1,ZRFCODE="3301",ZACTIVITY="REMOVED"

	if '(Z30Added!Z30Removed!Z33Added!Z33Removed) quit

	do SYSVAR^SCADRV0()

	type String ZBlockStatus
	type Number ZUID,ZAUTHID

	set ZCID=DTJ.CID
	set ZALLOWRFLG=0
	type RecordDEP ZDEP = Db.getRecord("DEP","CID=:ZCID")
	type RecordRFLG ZRFLG 
	if ZACTIVITY="ADDED" do {
		if Db.isDefined("RFLG","RFLG=:ZRFCODE,CID=:ZCID") do {
			set ZRFLG=Db.getRecord("RFLG","RFLG=:ZRFCODE,CID=:ZCID")
			set ZALLOWRFLG=1
		}
	}

	set ZTJD=%SystemDate

	set (ZBlockStatus)=""


	set ^ZBLOCKEXT(CID,ZTJD,ZTIME,"RecType")="D"
	set ^ZBLOCKEXT(CID,ZTJD,ZTIME,"DocNo")=$$PADDING($$ZRSUID(),2,24)
	set ^ZBLOCKEXT(CID,ZTJD,ZTIME,"AcctId")=$$PADDING(ZDEP.CID,2,10)
	set ^ZBLOCKEXT(CID,ZTJD,ZTIME,"SubAcctId")=$$PADDING(ZDEP.ZSEQ,2,3)
	set ^ZBLOCKEXT(CID,ZTJD,ZTIME,"AcctName")=$$PADDING(ZDEP.ACCTNAME,1,180)
	set ^ZBLOCKEXT(CID,ZTJD,ZTIME,"DomBranchId")=$$PADDING(ZDEP.BOO,2,4)
	set ^ZBLOCKEXT(CID,ZTJD,ZTIME,"ServiceBranchId")=$$PADDING(DTJ.BRCD,2,4)
	set ^ZBLOCKEXT(CID,ZTJD,ZTIME,"AcctOutsdBal")=$$PADDING(ZDEP.EODBAL,2,24)
	set ^ZBLOCKEXT(CID,ZTJD,ZTIME,"KBankProductCode")=$$PADDING(ZDEP.ZPRODCD,2,9)

	if ZACTIVITY="ADDED",ZALLOWRFLG do {
		set ZEXPDT=ZRFLG.EXDT
		set ZSTDT=ZRFLG.STDT	
		set ^ZBLOCKEXT(CID,ZTJD,ZTIME,"UserID")=$$PADDING(ZRFLG.UID,1,8)
		set ^ZBLOCKEXT(CID,ZTJD,ZTIME,"AuthID")=$$PADDING(ZRFLG.UID,1,8)
		set ^ZBLOCKEXT(CID,ZTJD,ZTIME,"BlockCode")=$E(ZRFLG.RFLG,1,2)
		set ZGRP=ZDEP.GRP
		set (ZTDESC,ZENGDESC)=""
		type ResultSet desc= Db.select("DESC,ZENDESC","UTBLRFLG","RFLG=:ZRFLG AND GRP=:ZGRP")
		while desc.next() do {
			set ZTDESC=desc.getCol(1)
			set ZENGDESC=desc.getCol(2)
			
			
		}
		set ^ZBLOCKEXT(CID,ZTJD,ZTIME,"BlockTypeEn")=$E($$PADDING(ZENGDESC,1,20),1,20)
		set ^ZBLOCKEXT(CID,ZTJD,ZTIME,"BlockTypeTh")=$E($$PADDING(ZTDESC.DESC,1,20),1,20)
	}
	else do {
		set ^ZBLOCKEXT(CID,ZTJD,ZTIME,"UserID")=$$PADDING(DTJ.UID,1,8)
		set ^ZBLOCKEXT(CID,ZTJD,ZTIME,"AuthID")=$$PADDING(DTJ.UID,1,8)
		set ^ZBLOCKEXT(CID,ZTJD,ZTIME,"BlockCode")="  "
		set ^ZBLOCKEXT(CID,ZTJD,ZTIME,"BlockTypeEn")=$J("",20)
		set ^ZBLOCKEXT(CID,ZTJD,ZTIME,"BlockTypeTh")=$J("",20)
	}
	if (ZSTDT)'>(ZTJD) do {
		if ZTJD<(ZEXPDT) set ZBlockStatus="A"
	}
	else if ZSTDT>ZTJD set ZBlockStatus="I"
	else if ZEXPDT>ZTJD set ZSTATUS="V"
	set ^ZBLOCKEXT(CID,ZTJD,ZTIME,"BlockStatus")=ZBlockStatus
	if ZBlockStatus="A" do {
		set ^ZBLOCKEXT(CID,ZTJD,ZTIME,"ReasonBlockCod")=$$PADDING(ZRFLG.ZRES,1,30)
	}

	/*
	set ^ZBLOCKEXT(CID,ZTJD,ZTIME,"BlockTypeEn")=$$PADDING(ZRFLG.DESC,1,20)
	set ^ZBLOCKEXT(CID,ZTJD,ZTIME,"BlockTypeTh")=$$PADDING(ZRFLG.DESC,1,20)
	*/
	set ^ZBLOCKEXT(CID,ZTJD,ZTIME,"TransactionDt")=$$PADDING(ZTJD.toString("YYYYMMDD"),5,"")
	set ^ZBLOCKEXT(CID,ZTJD,ZTIME,"TransactionTime")=$$TIM^%ZM(ZTIME,"2460SS")


	quit

HEADER(IO out)

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")
	type String ZSTAMP,ZTIM,ZDAT,ZOM,ZHEADER,ZFOOTER
	set (ZSTAMP,ZTIM,ZDAT,ZOM,ZHEADER,ZFOOTER)=""
	
	type Number MICSEC,ZCID
	set MICSEC=""
	set MICSEC=$$GETTIM^%ZFUNC()
	set MICSEC=MICSEC.extract(MICSEC.length()-6,MICSEC.length()-5)

	set ZDAT=$$DAT^%ZM(%CurrentDate,"YEAR-MM-DD")
	set ZTIM=$$TIM^%ZM(%CurrentTime,"24:60:SS")
	set ZSTAMP=ZDAT_"T"_ZTIM_"."_MICSEC_"+07:00"
	set ZBUSDATE=%CurrentDate.toString("YEARMMDD")

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	/*
	type IO out =Class.new("IO")
	set out.fileName =$$TRNLNM^%ZFUNC("SCAU_SPOOL")_"/CBS"_ZACTIVITY_ZEXTDAT_".txt"
	set out.openParams ="NEWV/WRITE"
	set out.recordSize =1024
	do out.open()
	*/

	set ZRECTYPE="H01"
	set ZSYSDT=ZSTAMP
	set ZBusinessDt=ZBUSDATE
	set ZSrcAppId=cuvar.zappid
	set ZFileType="BlkUnblk"
	set ZFileSeqNum="000001"

	set ZHEADER.piece("|",1)=ZRECTYPE
	set ZHEADER.piece("|",2)=ZSYSDT
	set ZHEADER.piece("|",3)=ZBusinessDt
	set ZHEADER.piece("|",4)=ZSrcAppId
	set ZHEADER.piece("|",5)=ZFileType
	set ZHEADER.piece("|",6)=ZFileSeqNum

	do out.write(ZHEADER)

	quit

FOOTER(IO out,Number ZCOUNT)
	type String ZFOOTER

	set ZRECTYPE="T01"
	set ZTotalRec=ZCOUNT
	set ZFOOTER.piece("|",1)=ZRECTYPE
	set ZFOOTER.piece("|",2)=ZCOUNT.zero(15)
	do out.write(ZFOOTER)
	quit



EXT(IO out,Number ZCOUNT)

	type Number ZCID
	set ZCID=$O(^ZBLOCKEXT(""))
	if ZCID="" quit
	while 'ZCID.isNull() do {
		set ZTJD=$O(^ZBLOCKEXT(ZCID,""))
		while 'ZTJD.isNull() do {
			set ZTIME=$O(^ZBLOCKEXT(ZCID,ZTJD,""))
			while 'ZTIME.isNull() do {
				set ZCOUNT=ZCOUNT+1
				type String ZOM
				set ZOM=""
				set ZOM.piece("|",1)=^ZBLOCKEXT(ZCID,ZTJD,ZTIME,"RecType").get()
				set ZOM.piece("|",2)=^ZBLOCKEXT(ZCID,ZTJD,ZTIME,"DocNo").get()
				set ZOM.piece("|",3)=^ZBLOCKEXT(ZCID,ZTJD,ZTIME,"AcctId").get()
				set ZOM.piece("|",4)=^ZBLOCKEXT(ZCID,ZTJD,ZTIME,"SubAcctId").get()
				set ZOM.piece("|",5)=^ZBLOCKEXT(ZCID,ZTJD,ZTIME,"AcctName").get()
				set ZOM.piece("|",6)=^ZBLOCKEXT(ZCID,ZTJD,ZTIME,"DomBranchId").get()
				set ZOM.piece("|",7)=^ZBLOCKEXT(ZCID,ZTJD,ZTIME,"ServiceBranchId").get()
				set ZOM.piece("|",8)=^ZBLOCKEXT(ZCID,ZTJD,ZTIME,"AcctOutsdBal").get()
				set ZOM.piece("|",9)=^ZBLOCKEXT(ZCID,ZTJD,ZTIME,"KBankProductCode").get()
				set ZOM.piece("|",10)=^ZBLOCKEXT(ZCID,ZTJD,ZTIME,"UserID").get()
				set ZOM.piece("|",11)=^ZBLOCKEXT(ZCID,ZTJD,ZTIME,"AuthID").get()
				set ZOM.piece("|",12)=^ZBLOCKEXT(ZCID,ZTJD,ZTIME,"BlockCode").get()
				set ZOM.piece("|",13)=^ZBLOCKEXT(ZCID,ZTJD,ZTIME,"BlockStatus").get()
				set ZOM.piece("|",14)=^ZBLOCKEXT(ZCID,ZTJD,ZTIME,"ReasonBlockCod").get()
				set ZOM.piece("|",15)=^ZBLOCKEXT(ZCID,ZTJD,ZTIME,"BlockTypeEn").get()
				set ZOM.piece("|",16)=^ZBLOCKEXT(ZCID,ZTJD,ZTIME,"BlockTypeTh").get()
				set ZOM.piece("|",17)=^ZBLOCKEXT(ZCID,ZTJD,ZTIME,"TransactionDt").get()
				set ZOM.piece("|",18)=^ZBLOCKEXT(ZCID,ZTJD,ZTIME,"TransactionTime").get()
				do out.write(ZOM)
				set ZTIME=$O(^ZBLOCKEXT(ZCID,ZTJD,ZTIME))
			}
			set ZTJD=$O(^ZBLOCKEXT(ZCID,ZTJD))
		}
		set ZCID=$O(^ZBLOCKEXT(ZCID))
	}

	quit


EXTRACT
	do SYSVAR^SCADRV0()
	type Date ZEXTDAT
	set ZEXTDAT=%SystemDate.toString("YEARMMDD")
	
	do BLOCK
	//do UNBLOCK

	quit
BLOCK

	//Extract BLOCK
	type Number ZCOUNT
	type IO out =Class.new("IO")

	set ZCOUNT=0
	set out.fileName =$$TRNLNM^%ZFUNC("SCAU_SPOOL")_"/CBSBLOCK"_ZEXTDAT_".txt"
	set out.openParams ="NEWV/WRITE"
	set out.recordSize =1024
	do out.open()
	do HEADER(.out)
	do EXT(.out,.ZCOUNT)
	do FOOTER(.out,ZCOUNT)
	do out.close()
	quit

UNBLOCK

	//Extract UNBLOCK
	/*
	type Number ZCOUNT
	type IO out =Class.new("IO")
	set ZCOUNT=0
	set out.fileName =$$TRNLNM^%ZFUNC("SCAU_SPOOL")_"/CBSUNBLOCK"_ZEXTDAT_".txt"
	set out.openParams ="NEWV/WRITE"
	set out.recordSize =1024
	do out.open()
	do HEADER("UNBLOCK",.out)
	do EXT("REMOVED",.out,.ZCOUNT)
	do FOOTER("UNBLOCK",.out,ZCOUNT)
	do out.close()
	*/

	quit


ZRSUID()
	// Build Reponse UID
	do SYSVAR^SCADRV0()
	type Number MICSEC
	type String ZRETURN

	set MICSEC=$$GETTIM^%ZFUNC()
	set MICSEC=MICSEC.extract(MICSEC.length()-6,MICSEC.length())

	set ZRETURN=%SystemDate_$$TIM^%ZM(%CurrentTime,"2460SS")_MICSEC

	quit ZRETURN


PADDING(array,flg,fixL)

	type String out
	type Number zlength
	set out=""

	//Blank padding
	if flg=1 do {
		type String in
		set in=array.get()
		set zlength=in.length()
		set out=in_$J("",fixL-zlength)
		//set out=in_$J("""",fixL-zlength)

	}
	//Zero padding
	if flg=2 do {
		type Number in
		set in=array.get()
		set zlength=in.length()
		set out=in.zero(fixL)
	}
	//MainFrame
	if flg=3 do {
		type Number in,ZER
		type String ZRM
		set ZER=0
		set ZRM=""
		set in=array.get()*100
		do CONVENC^ZITFUTL(1,in,.out,.ZER,.ZRM)
	}
	//Balance
	if flg=4 do {
		type Number in
		set in=array.get()
		set out=in.zero(fixL,2,0,0)
	}
	//Default value for mandatory date
	if flg=5 do {
		type String in
		set in=array.get()
		if in.isNull() set out="9999-12-31"
		else set out=in

	}

	quit out