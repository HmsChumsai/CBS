//DO NOT MODIFY  Replicate data From CMS|ZCMSREPL|||||||1

 	/*
ORIG: Ravipong Chumsai Na Ayuthaya  - 07/02/2012
DESC: Extract data from Table - UTBLBRCD
	*/
	
CIF

	type Number ER,EXIT
	set (ER,EXIT)=0
	set ZFID =$$TRNLNM^%ZFUNC("PROFILE_DIR")_"/zmk/CIFLIST_"_ZEXTDAT_".txt"
	// Check whether the file exists or not.
	do CHKIO(ZFID)
	if ER =1 set RM =$$^MSG(2799,ZFID) quit
	
	set EXIT =0
	
	
	type IO io =Class.new("IO")
	set io.fileName =ZFID
	set io.openParams ="READ"
	set io.recordSize =1024
	do io.open()
	
	type IO out =Class.new("IO")
	set out.fileName =$$TRNLNM^%ZFUNC("PROFILE_DIR")_"/zmk/CIF_"_ZEXTDAT_".txt"
	set out.openParams ="NEWV/WRITE"
	set out.recordSize =1024
	do out.open()
	
	set cifHead="ACN|THAI_TITLE|THAI_FNAME|THAI_LNAME|THAI_MNAME|CITIZEN_ID|TAX_ID|LEGAL_ADDR1|LEGAL_ADDR2|LEGAL_ADDR3|LEGAL_TAMBOL_CD|"
	set cifHead=cifHead_"LEGAL_AMPHUR_CD|LEGAL_PROVINCE_CD|LEGAL_COUNTRY_CD|LEGAL_POSTAL_CD|HOME_PHONE|MOBILE_PHONE|OFFICE_PHONE|OFFICE_PHONE_EXT|"
	set cifHead=cifHead_"JURISTIC_ID|MAILING_ADDR1|MAILING_ADDR2|MAILING_ADDR3|MAILING_TAMBOL_CD|MAILING_AMPHUR_CD|MAILING_PROVINCE_CD|MAILING_COUNTRY_CD|MAILING_POSTAL_CD|OFFICE_ADDR1|"
	set cifHead=cifHead_"OFFICE_ADDR3|OFFICE_ADDR2|OFFICE_TAMBOL_CD|OFFICE_AMPHUR_CD|OFFICE_PROVINCE_CD|OFFICE_COUNTRY_CD|OFFICE_POSTAL_CD|MARITAL_STATUS|SEX|"
	set cifHead=cifHead_"DATE_OF_BIRTH|FAX_NUMBER|EMAIL|CUST_CD|CUST_DESC|CUST_TYPE|PASSPORT_NUMBER|"

	type Number i=0
	do out.write(cifHead)
	
	for  set REC =io.read() { quit:EXIT
		
		set i =i+1
		type Number ZACN
		type String output
		if REC[$C(13) set REC=$TR(REC,$C(13),"")
		if REC="" quit
		if REC["Total" set EXIT =1 quit
		catch error {
			new ET,RM
			set ET=error.type
			set RM=error.description
			set FROM=error.thrownAt
			//set RM="ZCOLSAVE Crash"
			write !,RM
		}
		set ZCHECK=REC.piece("|",1)
		if ZCHECK["Total" set EXIT=1 quit
		set ZACN=REC
		if Db.isDefined("CIF","ACN =:ZACN") do {
			
			type RecordCIF cif  = Db.getRecord("CIF","ACN =:ZACN")
			set output.piece("|",1)  = cif.acn
			set output.piece("|",2)  = cif.ZTITLE
			set output.piece("|",3)  = cif.FNAME
			set output.piece("|",4)  = cif.LNM
			set output.piece("|",5)  = cif.MNAME
			set output.piece("|",6)  = cif.ZCIZID
	
			set output.piece("|",7)  = cif.TAXID
			set output.piece("|",8)  = cif.PAD1
			set output.piece("|",9)  = cif.PAD2
			set output.piece("|",10)  = cif.PAD3
			set output.piece("|",11)  = cif.ZPSDISCD
			set output.piece("|",12)  = cif.PCITY
			set output.piece("|",13)  = cif.pstate
			set output.piece("|",14)  = cif.pcntry
			set output.piece("|",15)  = cif.pzip
	
			set output.piece("|",16)  = cif.HPH
			set output.piece("|",17)  = cif.APH
			set output.piece("|",18)  = cif.BPH
			set output.piece("|",19)  = cif.BPHEXT
			set output.piece("|",20)  = cif.ZJIN
			set output.piece("|",21)  = cif.mad1
			set output.piece("|",22)  = cif.mad2
			set output.piece("|",23)  = cif.mad3
	
			set output.piece("|",24)  = cif.ZMSDISCD
			set output.piece("|",25)  = cif.mcity
			set output.piece("|",26)  = cif.mstate
			set output.piece("|",27)  = cif.mcntry
			set output.piece("|",28)  = cif.mzip
			set output.piece("|",29)  = cif.zoad1
			set output.piece("|",30)  = cif.zoad2
			set output.piece("|",31)  = cif.zoad3
	
			set output.piece("|",32)  = cif.ZOSDISCD
			set output.piece("|",33)  = cif.zocity
			set output.piece("|",34)  = cif.zostate
			set output.piece("|",35)  = cif.zocntry
			set output.piece("|",36)  = cif.zozip
			set output.piece("|",37)  = cif.mar
			set output.piece("|",38)  = cif.sex
			set output.piece("|",39)  = cif.dob.toString("YEAR-MM-DD")
			set output.piece("|",40)  = cif.FAXNUM
			set output.piece("|",41)  = cif.EMAIL
			set output.piece("|",42)  = cif.ZKTBCCODE
			set output.piece("|",43)  = $$GET("DESC,ZUTBLKTBCUST,KTBCCODE,"_cif.ZKTBCCODE)
			set output.piece("|",44)  = cif.PERS
			if (cif.PASNUM="") set output.piece("|",45)=" "
			else set output.piece("|",45)  = cif.PASNUM
			
			do out.write(output)
		}
			
	do out.write("Total "_i)
	}
	do out.close()
	set IOTYP ="RMS"
	do io.close()
	
	quit
	
ACN
	
	type Number ER,EXIT
	set (ER,EXIT)=0
	set ZFID =$$TRNLNM^%ZFUNC("PROFILE_DIR")_"/zmk/ACCOUNTLIST_"_ZEXTDAT_".txt"
	// Check whether the file exists or not.
	do CHKIO(ZFID)
	if ER =1 set RM =$$^MSG(2799,ZFID) quit
	set (GRPDES,PRODDES,BRCDESC,STATDESC,MKTCDES,SUBDESC) = ""
	
	type IO io =Class.new("IO")
	set io.fileName =ZFID
	set io.openParams ="READ"
	set io.recordSize =1024
	do io.open()
	
	type IO out =Class.new("IO")
	set out.fileName =$$TRNLNM^%ZFUNC("PROFILE_DIR")_"/zmk/ACN_"_ZEXTDAT_".txt"
	set out.openParams ="NEWV/WRITE"
	set out.recordSize =1024
	do out.open()
	
	set acnHead="CID|PRODUCT_CLASS|PRODUCT_GRP|PRODUCT_GRP_DESC|PRODUCT_TYPE|PRODUCT_TYPE_DESC|ACCT_NAME|PRIMARY_CIF|ACCT_STATUS|ACCT_STATUS_DESC|"
	set acnHead=acnHead_"OUTS_BAL|AVAIL_BAL|MASTER_ACCT_NO|ACCT_SUBTYPE|MARKET_CD|MARKET_CD_DESC|LIMIT_AMT|DT_OPENED|DT_CLOSED|OWNER_BR|OWNER_BR_DESC|"
	set acnHead=acnHead_"INT_RECEIVE|INT_SUSPENSE|LEGAL_ID|TOTAL_DUE|MISC_CHARGE|LATE_CHARGE_AMT|INT_PASS_DUE|PRIN_PASS_DUE|LOAN_CLASS"
	
	do out.write(acnHead)
	
	for  set REC =io.read() { quit:EXIT
		type String output
		if REC[$C(13) set REC=$TR(REC,$C(13),"")
		if REC="" quit
		catch error {
			new ET,RM
			set ET=error.type
			set RM=error.description
			set FROM=error.thrownAt
				//set RM="ZCOLSAVE Crash"
			write !,RM
		}
		
		set ZCHECK=REC.piece("|",1)
		if ZCHECK["Total" set EXIT=1 quit
		set ZCID = REC
		if Db.isDefined("ACN","CID=:ZCID") do {
			
			type String output
			type RecordACN acn  = Db.getRecord("ACN","CID=:ZCID")
			if acn.getMode() =0 quit
			set output.piece("|",36) =""
			set ZCLS  = acn.CLS
			set ZSUBT = acn.ZSUBT
			
			if ZCLS ="D" do {
				
				type RecordDEP dep  = Db.getRecord("DEP","CID =:ZCID")
				set output.piece("|",1)  = dep.cid
				set output.piece("|",2)  = dep.cls
				set output.piece("|",3)  = dep.grp
				
				if 'dep.grp.isNull() do {			
					type RecordSTBLGRP desc  = Db.getRecord("STBLGRP","CLS =:dep.cls,GRP =dep.grp",1)
					if 'desc.getMode() =0 set GRPDES  = desc.des			
				}
				
				set output.piece("|",4)  = GRPDES
				set output.piece("|",5)  = dep.type
				
				if 'dep.type.isNull() do {
					type RecordPRODCTL desc  = Db.getRecord("PRODCTL","TYPE =:dep.type",1)
					if 'desc.getMode() =0 set PRODDES  = desc.des
				}
				
				set output.piece("|",6)  = PRODDES
				set output.piece("|",7)  = dep.title1
				set output.piece("|",8)  = dep.acn
				set output.piece("|",9)  = dep.zstatcd
				
				if 'dep.zstatcd.isNull() do {
					type RecordZUTBLSTATD desc  = Db.getRecord("ZUTBLSTATD","ZSTATCD =:dep.zstatcd",1)
					if 'desc.getMode() =0 set STATDESC  = desc.des
				}
				
				set output.piece("|",10)  = STATDESC
				set output.piece("|",11)  = dep.bal
				set output.piece("|",12)  = dep.balavl
				set output.piece("|",13)  = dep.ZMASTER
				set output.piece("|",14)  = ""
				set output.piece("|",15)  = ""
				set output.piece("|",16)  = ""
				set output.piece("|",17)  = dep.zcltot   
				if dep.tld' =0,dep.tld' ="" set output.piece("|",18)  = dep.tld.toString("YEAR-MM-DD")_"-00.00.00"
				if dep.dtc' =0,dep.dtc' ="" set output.piece("|",19)  = dep.dtc.toString("YEAR-MM-DD")_"-00.00.00"
				set output.piece("|",20)  = dep.boo
				
				if 'dep.boo.isNull() do {
					type RecordUTBLBRCD desc  = Db.getRecord("UTBLBRCD","BRCD =:dep.boo",1)
					if 'desc.getMode() =0 set BRCDESC  = desc.desc		
				}
				
				set output.piece("|",21)  = BRCDESC
				set output.piece("|",22)  = dep.NEGACR+dep.NEGACRUN
				set output.piece("|",23)  = dep.ZASINT
				set output.piece("|",24)  = dep.zlgid
				set output.piece("|",25)  = ""
				set output.piece("|",26)  = ""
				set output.piece("|",27)  = ""
				set output.piece("|",28)  = ""
				set output.piece("|",29)  = ""
				set output.piece("|",30)  = dep.darcls
				set output.piece("|",31)  = ""
				if 'ZSUBT.isNull() do {
					type RecordUTBLSUBT desc  = Db.getRecord("UTBLSUBT","GRP =:dep.grp,KEY =:ZSUBT",1)
					if 'desc.getMode() =0 set SUBDESC  = desc.desc
				}
				
				set output.piece("|",32)  = SUBDESC
				set output.piece("|",33)  = ""
				set output.piece("|",34)  = dep.ODLIM
				set output.piece("|",36)  = ""_"|"
				
				
			}
		
			if (ZCLS ="L") do {
			type RecordLN ln  = Db.getRecord("LN","CID =:ZCID")
				
				set output.piece("|",1)  = ln.cid
				set output.piece("|",2)  = ln.cls
				set output.piece("|",3)  = ln.grp
				
				if 'ln.grp.isNull() do {
					type RecordSTBLGRP desc  = Db.getRecord("STBLGRP","CLS =:ln.cls,GRP =:ln.grp",1)
					if 'desc.getMode() =0 set GRPDES  = desc.des
				}
				
				set output.piece("|",4)  = GRPDES
				set output.piece("|",5)  = ln.type
				
				if 'ln.type.isNull() do {
					
					type RecordPRODCTL desc  = Db.getRecord("PRODCTL","TYPE =:ln.type",1)
					if 'desc.getMode() =0 set PRODDES  = desc.des
				
				}
				
				set output.piece("|",6)  = PRODDES
				set output.piece("|",7)  = ln.title1
				set output.piece("|",8)  = ln.acn
				set output.piece("|",9)  = ln.stat
				
				if 'ln.zstatcd.isNull() do {
					
					type RecordZUTBLSTATD desc  = Db.getRecord("ZUTBLSTATD","ZSTATCD =:ln.zstatcd",1)
					if 'desc.getMode() =0 set STATDESC  = desc.des
				
				}
				set output.piece("|",10)  = STATDESC
				set output.piece("|",11)  = ln.bal
				set output.piece("|",12)  = ln.balavail
				set output.piece("|",13)  = ""
				set output.piece("|",14)  = ln.subt
				set output.piece("|",15)  = ln.zmktcd
				
				if 'ln.zmktcd.isNull() do {
					
					type RecordZUTBLMKTCD desc  = Db.getRecord("ZUTBLMKTCD","GRP =:ln.grp,SUBT =:ln.subt,CODE =:ln.zmktcd",1)
					if 'desc.getMode() =0 set MKTCDES  = desc.DESC
					
				}
				set output.piece("|",16)  = MKTCDES
				set output.piece("|",17)  = ln.crlmt
				if ln.tld' =0,ln.tld' ="" set output.piece("|",18)  = ln.tld.toString("YEAR-MM-DD")_"-00.00.00"
				if ln.dtc' =0,ln.dtc' ="" set output.piece("|",19)  = ln.dtc.toString("YEAR-MM-DD")_"-00.00.00"
				set output.piece("|",20)  = ln.boo
				
				if 'ln.boo.isNull() do {
					type RecordUTBLBRCD desc  = Db.getRecord("UTBLBRCD","BRCD =:ln.boo",1)
					if 'desc.getMode() =0 set BRCDESC  = desc.desc
				
				}
				set output.piece("|",21)  = BRCDESC
				
				if ln.ZDELSTAT =1 		set output.piece("|",22)  = ln.acr
				if ln.ZDELSTAT =2 		set output.piece("|",22)  = 0
				if 'ln.ZDELSTAT =2,ln.ZDELSTAT =1 set output.piece("|",22)  = ""
				
				if ln.ZDELSTAT =2 		set output.piece("|",23)  = ln.acr
				if 'ln.ZDELSTAT =2 		set output.piece("|",23)  = 0
				
				
				set output.piece("|",24)  = ln.zlgid
				set output.piece("|",25)  = ln.gtdue
				set output.piece("|",26)  = ln.mcnd
				set output.piece("|",27)  = ln.lchg
				set output.piece("|",28)  = ln.duin
				set output.piece("|",29)  = ln.dupr
				set output.piece("|",30)  = ln.darcls
				set output.piece("|",31)  = ln.rescls
				
				if 'ZSUBT.isNull() do {
					type RecordUTBLSUBT desc  = Db.getRecord("UTBLSUBT","GRP =:ln.grp,KEY =:ZSUBT",1)
					if 'desc.getMode() =0 set SUBDESC  = desc.desc
				}
				
				set output.piece("|",32)  = SUBDESC
				if ln.DTNT' =0,ln.DTNT' ="" set output.piece("|",33)  = ln.DTNT.toString("YEAR-MM-DD")_"-00.00.00"
				set output.piece("|",34)  = ""
				set output.piece("|",35)  = ln.cctlb
				set output.piece("|",36)  = ln.MCHG_"|"
			
			
				
			}
			
			do out.write(output)
		}
	}
	
	
	do out.close()
	set IOTYP ="RMS"
	do io.close()
	
	quit

	
CHKIO(X)
	// CHECK WHETHER THE FILE EXISTS OR NOT
	set z =$$FILE^%ZOPEN(X,"READ",5)
	if 'z do {
		set ER =1
		set RM =$P(z,"|",2)
	}
	close X

	quit
	
GET(INPUT)
	//Ravipong Chumsai 
	// 10/10/11
	//This Linetag functions similiar to Db.select command but different aims to check the input parms and incapable to select more than 1 field
	//The form of the input is in comma-separated  format where the first 2 parameters are "SELECT,FROM" Statement
	//And follow by 2(n) consecutive WHERE statement ,for example This input string "CID,ACN,BAL,100,CLS,LN,"
	//Will be translated to SELECT CID FROM ACN WHERE BAL ='100' AND CLS ='LN'
	
	set ret =""
	new ER
	set ER =0
	set INPUT  = INPUT.translate("""","")
	set s =$P(INPUT,",",1)
	set f =$P(INPUT,",",2)
	type Number k
	set k =2
	new exit
	set exit =0
	
	type String where =""
	type Number Count  = INPUT.length(",")  
	
	while (k<Count) do { quit:exit
		
	if $P(INPUT,",",k+2) ="" set ER =1, exit =1 quit
	
		if 'where.isNull() do {
	
		set where  = where_" AND "_$P(INPUT,",",1+k)_" ='"_$P(INPUT,",",k+2)_"'"
	
		}
		else set where =$P(INPUT,",",1+k)_" ='"_$P(INPUT,",",k+2)_"'"
		set k =k+2
		if k =Count set exit =1
		}
	if ER quit ret
	
	type String exe()
	type ResultSet x  = Db.select(s,f,where)
	if x.next() set ret  = x.getCol(1)
	
	quit ret
	
ZCOL
	
	set TLO=$$TLO^UTLO
	//set TJD=62588
	set %UID=1
	//set ER=""
	set ZFID =$$TRNLNM^%ZFUNC("PROFILE_DIR")_"/zmk/ZCOL_"_ZEXTDAT_".txt"
	//set ZFID =$$TRNLNM^%ZFUNC("PROFILE_DIR")_"/zmk/test.txt"
	// Check whether the file exists or not.
	do CHKIO(ZFID)
	//if ER =1 set RM =$$^MSG(2799,ZFID) quit
	
	set EXIT =0
	set i=0
	//type String REC
	
	type IO io =Class.new("IO")
	set io.fileName =ZFID
	set io.openParams ="READ"
	set io.recordSize =1024
	do io.open()
		
	type Number i,coll
	set i=0
	set EXIT=0	

		
		for  set REC =io.read() { quit:EXIT
			
			catch error {
				new ET,RM
				set ET=error.type
				set RM=error.description
				set FROM=error.thrownAt
			//set RM="ZCOLSAVE Crash"
				write !,RM
			}
			set ZCHECK=REC.piece("|",1)
			if ZCHECK["Total" set EXIT=1 quit
			
			type Number coll  = REC.piece("|",34)
			type RecordZCOL zcol = Db.getRecord("ZCOL","COLL=:coll",1)
			set zcol.AMPHUR = REC.piece("|",1)
			set zcol.AO = REC.piece("|",2)
			set zcol.APDCODE = REC.piece("|",3)
			set zcol.APPBOO = REC.piece("|",4)
			set zcol.APPBY = REC.piece("|",5)
			if REC.piece("|",6)'="" set zcol.APPDT = $$FDAT^%ZM(REC.piece("|",6),"YEARMMDD")
			set zcol.APPOFF1 = REC.piece("|",7)
			set zcol.APPOFF2 = REC.piece("|",8)
			set zcol.APPOFF3 = REC.piece("|",9)
			set zcol.APPTID = REC.piece("|",10)
			set zcol.APPVAL = REC.piece("|",11)
			set zcol.ASDATE  = REC.piece("|",12)
			set zcol.BKNUMBER  = REC.piece("|",13)
			set zcol.BLASTID  = REC.piece("|",14)
			set zcol.BLDCODE  = REC.piece("|",15)
			set zcol.BLDNAME  = REC.piece("|",16)
			set zcol.BLDNUM  = REC.piece("|",17)
			set zcol.BLDTYPE  = REC.piece("|",18)
			set zcol.BLDVAL   = REC.piece("|",19)
			set zcol.BOO  = REC.piece("|",20)
			set zcol.BOOTFR = REC.piece("|",21)
			set zcol.BOTCODE = REC.piece("|",22)
			set zcol.BOTRSKRT = REC.piece("|",23)
			set zcol.BSOI = REC.piece("|",24)
			set zcol.BSTRTID = REC.piece("|",25)
			set zcol.BUILDNO = REC.piece("|",26)
			set zcol.CACN = REC.piece("|",27)
			set zcol.CC = REC.piece("|",28)
			set zcol.CCRDT = REC.piece("|",29)
			set zcol.CCRNUM = REC.piece("|",30)
			set zcol.CERNO = REC.piece("|",31)
			set zcol.CID = REC.piece("|",32)
			set zcol.CMDCD = REC.piece("|",33)
			set zcol.COLL = REC.piece("|",34)
			set zcol.COLSUBT = REC.piece("|",35)
			set zcol.COLTYP = REC.piece("|",36)
			set zcol.CONDPAR = REC.piece("|",37)
			set zcol.CONVDT = REC.piece("|",38)
			set zcol.CRCD = REC.piece("|",39)
			set zcol.DATETRF = REC.piece("|",40)
			set zcol.DESC = REC.piece("|",41)
			set zcol.DOB = REC.piece("|",42)
			set zcol.DOCLCT = REC.piece("|",43)
			set zcol.DOD = REC.piece("|",44)
			set zcol.ENGCAP = REC.piece("|",45)
			set zcol.EXTRSKR = REC.piece("|",46)
			set zcol.FLOOR = REC.piece("|",47)
			set zcol.GRPNO = REC.piece("|",48)
			set zcol.GTEL = REC.piece("|",49)
			set zcol.INSREQ = REC.piece("|",50)
			set zcol.KTBRKR = REC.piece("|",51)
			set zcol.LNDINFO = REC.piece("|",52)
			set zcol.LNDNO = REC.piece("|",53)
			set zcol.LNDVAL = REC.piece("|",54)
			set zcol.LNDVOL1 = REC.piece("|",55)
			set zcol.LNDVOL2 = REC.piece("|",56)
			set zcol.LNDVOL3 = REC.piece("|",57)
			set zcol.LNDVOL4 = REC.piece("|",58)
			set zcol.LOC1 = REC.piece("|",59)
			set zcol.LOC2 = REC.piece("|",60)
			set zcol.LOC3 = REC.piece("|",61)
			set zcol.LQCD = REC.piece("|",62)
			set zcol.LRTRVDT = REC.piece("|",63)
			set zcol.MCODE1 = REC.piece("|",64)
			set zcol.MCODE2 = REC.piece("|",65)
			set zcol.NONCRM = REC.piece("|",66)
			set zcol.OPRIMKEY = REC.piece("|",67)
			set zcol.OWNLNDVOL1 = REC.piece("|",68)
			set zcol.OWNLNDVOL2 = REC.piece("|",69)
			set zcol.OWNLNDVOL3 = REC.piece("|",70)
			set zcol.OWNLNDVOL4 = REC.piece("|",71)
			set zcol.OWNPORTN = REC.piece("|",72)
			set zcol.PACN = REC.piece("|",73)
			set zcol.PAGENO = REC.piece("|",74)
			set zcol.PARTLFLG = REC.piece("|",75)
			set zcol.PAYPARTY = REC.piece("|",76)
			set zcol.PCHPRICE = REC.piece("|",77)
			set zcol.PCOLVAL = REC.piece("|",78)
			set zcol.PERSONID = REC.piece("|",79)
			set zcol.PROVINCE = REC.piece("|",80)
			set zcol.RAVANG = REC.piece("|",81)
			set zcol.REASON = REC.piece("|",82)
			set zcol.REMARKS = REC.piece("|",83)
			set zcol.RESPUNIT = REC.piece("|",84)
			set zcol.RIGHBAL = REC.piece("|",85)
			set zcol.RIGHVAL = REC.piece("|",86)
			set zcol.RMAREA = REC.piece("|",87)
			set zcol.RMKPORTN = REC.piece("|",88)
			set zcol.RMNUMBER = REC.piece("|",89)
			set zcol.ROAD = REC.piece("|",90)
			set zcol.RSCD = REC.piece("|",91)
			set zcol.RULCOST = REC.piece("|",92)
			set zcol.SEQNO = REC.piece("|",93)
			set zcol.SHRHLDRG = REC.piece("|",94)
			set zcol.SHRTNAME = REC.piece("|",95)
			set zcol.STCKNO = REC.piece("|",96)
			set zcol.STOREY = REC.piece("|",97)
			set zcol.SUBBOT = REC.piece("|",98)
			set zcol.SYMBOL = REC.piece("|",99)
			set zcol.TAMBOL = REC.piece("|",100)
			set zcol.TOTPORTN = REC.piece("|",101)
			set zcol.UNITCD = REC.piece("|",102)
			set zcol.USEDSTDT = REC.piece("|",103)
			set zcol.USEFULIF = REC.piece("|",104)
			set zcol.ZATEEXP = REC.piece("|",105)
			set zcol.ZATEISSUEDT = REC.piece("|",106)
			set zcol.ZATEISSUER = REC.piece("|",107)
			set zcol.ZATENUM = REC.piece("|",108)
			set zcol.ZCERTBAL = REC.piece("|",109)
			set zcol.ZCERTCID = REC.piece("|",110)
			set zcol.ZCERTGRP = REC.piece("|",111)
			set zcol.ZCERTID = REC.piece("|",112)
			set zcol.ZCERTLOTH = REC.piece("|",113)
			set zcol.ZCERTLOTL = REC.piece("|",114)
			set zcol.ZCERTPERIOD = REC.piece("|",115)
			set zcol.ZCERTUNIT = REC.piece("|",116)
			set zcol.ZLGISSUEDT = REC.piece("|",117)
			set zcol.ZLGNUM = REC.piece("|",118)
			set zcol.ZRADUR = REC.piece("|",119)
			set zcol.ZRAEXP = REC.piece("|",120)
			set zcol.ZRAISSUER = REC.piece("|",121)
			set zcol.ZRANUM = REC.piece("|",122)
			set zcol.ZRATYPE=REC.piece("|",123)
			
			do zcol.bypassSave()

	
	quit
			set i=i+1
			write !,i_". "_coll
				
				
		}		

	quit
	
ZCOLSAVE(REC)
	
		
	
			

ZCOLOWNLINK	

	set %UID=1
	set TLO=$$TLO^UTLO
	set ER=""
	set ZFID =$$TRNLNM^%ZFUNC("PROFILE_DIR")_"/zmk/ZCOLOWNLINK_"_ZEXTDAT_".txt"
	// Check whether the file exists or not.
	do CHKIO(ZFID)
	if ER =1 set RM =$$^MSG(2799,ZFID) quit
	
	set EXIT =0
	
	
	type IO io =Class.new("IO")
	set io.fileName =ZFID
	set io.openParams ="READ"
	set io.recordSize =1024
	do io.open()
	set i=0
	
	
		for  set REC =io.read() { quit:EXIT
			
			catch error {
				new ET,RM
				set ET=error.type
				set RM=error.description
				set FROM=error.thrownAt
			//set RM="ZCOLSAVE Crash"
				write !,RM
			}
			
			set ZCHECK=REC.piece("|",1)
			if ZCHECK["Total" set EXIT=1 quit
				
			type RecordZCOLOWNLINK zown = Db.getRecord("ZCOLOWNLINK","COLL=:COLL,ACN=:ACN",1)
			set zown.ACN = REC.piece("|",1)
			set zown.COLL = REC.piece("|",2)
			set zown.PAROWNFLG=REC.piece("|",3)
			
			do zown.bypassSave()
			set i=i+1
			write !,i_".ACN:"_ACN_"  COLL :"_COLL
			
			}
	
		
	
	
	quit
	
ZCONTRACT

	set ER=""
	set ZFID =$$TRNLNM^%ZFUNC("PROFILE_DIR")_"/zmk/ZCONTRACT_"_ZEXTDAT_".txt"
	// Check whether the file exists or not.
	do CHKIO(ZFID)
	if ER =1 set RM =$$^MSG(2799,ZFID) quit
	
	set EXIT =0
	
	
	type IO io =Class.new("IO")
	set io.fileName =ZFID
	set io.openParams ="READ"
	set io.recordSize =1024
	do io.open()

		for  set REC =io.read() { quit:EXIT
			
			catch error {
				new ET,RM
				set ET=error.type
				set RM=error.description
				set FROM=error.thrownAt
			//set RM="ZCOLSAVE Crash"
				write !,RM
			}
			
			set ZCHECK=REC.piece("|",1)
			if ZCHECK["Total" set EXIT=1 quit
			set ZCTRCT = REC.piece("|",7)
			type RecordZCONTRACT zctrct = Db.getRecord("ZCONTRACT","CTRCT=:ZCTRCT",1)
			set zctrct.BOO= REC.piece("|",1)
			set zctrct.CC= REC.piece("|",2)
			set zctrct.CONTRREL= REC.piece("|",3)
			set zctrct.CONVDT= REC.piece("|",4)
			set zctrct.CRTDATE= REC.piece("|",5)
			set zctrct.CRTUSER= REC.piece("|",6)
			set zctrct.CTRCT= REC.piece("|",7)
			set zctrct.CTRCTDT= REC.piece("|",8)
			set zctrct.CTRSTAT= REC.piece("|",9)
			set zctrct.MCTRCT= REC.piece("|",10)
			set zctrct.PLDGAMT= REC.piece("|",11)
			set zctrct.PLDGSEQ= REC.piece("|",12)
			set zctrct.RELDATE= REC.piece("|",13)
			set zctrct.REMARKS= REC.piece("|",14)
			set zctrct.RESPUNIT= REC.piece("|",15)
			
			do zctrct.bypassSave()
		}
		
	quit
	
ZCTRCTACN
	
	set ER=""
	set ZFID =$$TRNLNM^%ZFUNC("PROFILE_DIR")_"/zmk/ZCTRCTACN_"_ZEXTDAT_".txt"
	// Check whether the file exists or not.
	do CHKIO(ZFID)
	if ER =1 set RM =$$^MSG(2799,ZFID) quit
	
	set EXIT =0
	
	
	type IO io =Class.new("IO")
	set io.fileName =ZFID
	set io.openParams ="READ"
	set io.recordSize =1024
	do io.open()

		for  set REC =io.read() { quit:EXIT
			
			catch error {
				new ET,RM
				set ET=error.type
				set RM=error.description
				set FROM=error.thrownAt
			//set RM="ZCOLSAVE Crash"
				write !,RM
			}
			set ZCHECK=REC.piece("|",1)
			if ZCHECK["Total" set EXIT=1 quit
			set ZCID=REC.piece("|",1)
			set ZCTRCT=REC.piece("|",2)
			type RecordZCTRCTACN acn = Db.getRecord("ZCTRCTACN","CID=:ZCID,CTRCT=:ZCTRCT",1)
			do acn.bypassSave()
			
		}
			
	quit
	
ZCTRCTCIF
	
	set ER=""
	set ZFID =$$TRNLNM^%ZFUNC("PROFILE_DIR")_"/zmk/ZCTRCTCIF_"_ZEXTDAT_".txt"
	// Check whether the file exists or not.
	do CHKIO(ZFID)
	if ER =1 set RM =$$^MSG(2799,ZFID) quit
	
	set EXIT =0
	
	
	type IO io =Class.new("IO")
	set io.fileName =ZFID
	set io.openParams ="READ"
	set io.recordSize =1024
	do io.open()

		for  set REC =io.read() { quit:EXIT
			
			catch error {
				new ET,RM
				set ET=error.type
				set RM=error.description
				set FROM=error.thrownAt
			//set RM="ZCOLSAVE Crash"
				write !,RM
			}
			set ZCHECK=REC.piece("|",1)
			if ZCHECK["Total" set EXIT=1 quit
			set ZACN=REC.piece("|",1)
			set ZCTRCT=REC.piece("|",2)
			type RecordZCTRCTCIF cif = Db.getRecord("ZCTRCTCIF","ACN=:ZACN,CTRCT=:ZCTRCT",1)
			do cif.bypassSave()
			
		}
			
	quit
	
ZCTRCTCOL

	set ER=""
	set ZFID =$$TRNLNM^%ZFUNC("PROFILE_DIR")_"/zmk/ZCTRCTCOL_"_ZEXTDAT_".txt"
	// Check whether the file exists or not.
	do CHKIO(ZFID)
	if ER =1 set RM =$$^MSG(2799,ZFID) quit
	
	set EXIT =0
	
	
	type IO io =Class.new("IO")
	set io.fileName =ZFID
	set io.openParams ="READ"
	set io.recordSize =1024
	do io.open()

		for  set REC =io.read() { quit:EXIT
			
			catch error {
				new ET,RM
				set ET=error.type
				set RM=error.description
				set FROM=error.thrownAt
			//set RM="ZCOLSAVE Crash"
				write !,RM
			}
			
			set ZCHECK=REC.piece("|",1)
			if ZCHECK["Total" set EXIT=1 quit
			set ZCTRCT=REC.piece("|",1)
			set ZCOLL=REC.piece("|",2)
			type RecordZCTRCTCOL col = Db.getRecord("ZCTRCTCOL","COLL=:ZCOLL,CTRCT=:ZCTRCT",1)
			set col.CCSTAT = REC.piece("|",3)
			set col.PLDGVAL = REC.piece("|",4)
			set col.RELDATE = REC.piece("|",5)
			do col.bypassSave()
			
		}
			
	quit
	

	

	