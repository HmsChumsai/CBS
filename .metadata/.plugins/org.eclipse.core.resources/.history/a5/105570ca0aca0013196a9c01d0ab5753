//DO NOT MODIFY  Batch for waive account maintenance fee|ZBCHWAIV||||||ZWAIVEFEE|||100|32000||0|||10|10|0||0||0
---------- REVHIST ------ Section marker

---------- OPEN    ------ Section marker

	kill ^TMP("ZWAIVEFEE")
	do READ

---------- SCHINIT ------ Section marker

---------- SCHEXEC ------ Section marker

---------- SCHPOST ------ Section marker

---------- SCHEXIT ------ Section marker

	do EXTRACT

---------- THRINIT ------ Section marker

---------- THREXEC ------ Section marker

---------- EXEC    ------ Section marker

	do Runtime.rollback()
	//set ^TEST("ZMKTEST")=ZCID
	do PROC(ZCID)
	quit

EXT(IO out)

	set ZCID=$O(^TMP("ZWAIVEFEE","OUT",""))
	while 'ZCID.isNull() do {
		type String ZDATA
		set ZDATA = ^TMP("ZWAIVEFEE","OUT",ZCID)
		do out.write(ZDATA)
		set ZCID=$O(^TMP("ZWAIVEFEE","OUT",ZCID))
		set toTalRec=toTalRec+1
	}


	quit

EXTRACT

	type Number toTalRec
	set toTalRec=0
	do SYSVAR^SCADRV0()
	set ZEXTDAT=%SystemDate.toString("YEARMMDD")
	type IO out =Class.new("IO")
	set out.fileName =$$TRNLNM^%ZFUNC("SCAU_SPOOL")_"/zmk/TESTRSWAIVE_"_ZEXTDAT_".txt"
	set out.openParams ="NEWV/WRITE"
	set out.recordSize =1024
	do out.open()
	do HEADER(.out)
	do EXT(.out)
	do FOOTER(.out,toTalRec)
	do out.close()

	quit

FOOTER(IO out,i)


	set ZARROUT("RecType")="T01"
	set ZARROUT("TotalRec")=$$PADDING(i,2,15)
	set ZARROUT("Filler")=$J("",52)

	quit


HEADER(IO out)

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")
	type String ZSTAMP,ZTIM,ZDAT,ZOM
	set (ZSTAMP,ZTIM,ZDAT,ZOM)=""
	type Number MICSEC
	set MICSEC=""
	set MICSEC=$$GETTIM^%ZFUNC()
	set MICSEC=MICSEC.extract(MICSEC.length()-6,MICSEC.length()-5)

	set ZDAT=$$DAT^%ZM(%CurrentDate,"YEAR-MM-DD")
	set ZTIM=$$TIM^%ZM(%CurrentTime,"24:60:SS")
	set ZSTAMP=ZDAT_"T"_ZTIM_"."_MICSEC

	set ZARROUT("RecType")="H01"
	set ZARROUT("SysDt")=ZSTAMP
	set ZARROUT("BusinessDt")=%CurrentDate.toString("YYYY-MM-DD")
	set ZARROUT("SrcAppId")=$$PADDING(cuvar.zappid,1,5)
	set ZARROUT("FileType")="AcctInf "
	set ZARROUT("FileSeqNum")="000001"
	set ZARROUT("Filler")=$J("",5)

	set ZOM=ZOM_ZARROUT("RecType")
	set ZOM=ZOM_ZARROUT("SysDt")
	set ZOM=ZOM_ZARROUT("BusinessDt")
	set ZOM=ZOM_ZARROUT("SrcAppId")
	set ZOM=ZOM_ZARROUT("FileType")
	set ZOM=ZOM_ZARROUT("FileSeqNum")
	set ZOM=ZOM_ZARROUT("Filler")

	do out.write(ZOM)

	quit

ZREJ(ZCID,zdata)
	type String ZOM
	set ZERRCD=$$PADDING("E9999",1,30)

	set ZOM=$$PADDING(ZCID,2,10)
	set ZOM=ZOM_$$PADDING($P(zdata,"|",2),2,1)
	set ZOM=ZOM_"10"
	set ZOM=ZOM_ZERRCD
	set ZOM=ZOM_$J("",27)

	set ^TMP("ZWAIVEFEE","OUT",ZCID)=ZOM

	quit


PROC(ZCID)


	type String ZOM
	type Number ZSrcAppId,ZResetflag
	type RecordZWAIVEFEE zwaive = Db.getRecord("ZWAIVEFEE","BOUND='IN',CID=:ZCID")
	set ZSrcAppId=$P(zwaive.data,"|",1)
	set ZResetflag=$P(zwaive.data,"|",2)
	if 'Db.isDefined("DEP","CID=:ZCID") do ZREJ(ZCID,zwaive.data) quit
	type RecordDEP dep = Db.getRecord("DEP","CID=:ZCID",1)
	if ZResetflag=1 do {
		if ZSrcAppId["607" set dep.ZWFMF=1
		if ZSrcAppId["SM_WD" set dep.ZWFWD=1
		if ZSrcAppId["CH_VP" set dep.ZWFOT=1
	}
	else if ZResetflag=2 do {
		if ZSrcAppId["607" set dep.ZWFMF=0
		if ZSrcAppId["SM_WD" set dep.ZWFWD=0
		if ZSrcAppId["CH_VP" set dep.ZWFOT=0

	}
	else do ZREJ(ZCID,zwaive.data) quit
	do dep.save()
	if ER.get()=1 do ZREJ(ZCID,zwaive.data) quit
	set ZOM=$$PADDING(ZCID,2,10)
	set ZOM=ZOM_ZResetflag
	set ZOM=ZOM_"00"
	set ZOM=ZOM_$J("",30)
	set ZOM=ZOM_$J("",27)

	set ^TMP("ZWAIVEFEE","OUT",ZCID)=ZOM
	
	quit

READ
	type Number i,EXIT
	set (EXIT,i)=0

	type IO in =Class.new("IO")
	set in.fileName =$$TRNLNM^%ZFUNC("SCAU_SPOOL")_"/zmk/TFO1P.UF1D1049.ACCT.txt"
	set in.openParams ="READ"
	set in.recordSize =1024
	do in.open()


	for  set REC =in.read() { quit:EXIT
		type String output
		type Number ZCID
		set ZCID=""
		set i=i+1
		//if i=1 dquit //Skipp header
		if i=1 do {
			set ZSrcAppId=$E(REC,47,51)
		}
		else do {
			if REC["T01" set EXIT=1 quit //quit when reached footer
			set ZCID=+$E(REC,1,10)
			set ZResetflag=$E(REC,11,12)
			set ^TMP("ZWAIVEFEE","IN",ZCID)=ZSrcAppId_"|"_ZResetflag
		}
	}


	quit

PADDING(array,flg,fixL)

	type String out
	type Number zlength
	set out=""

	//Blank padding
	if flg=1 do {
		type String in
		set in=array.get()
		set zlength=in.length()
		set out=in_$J("",fixL-zlength)
		//set out=in_$J("""",fixL-zlength)

	}
	//Zero padding
	if flg=2 do {
		type Number in
		set in=array.get()
		set zlength=in.length()
		set out=in.zero(fixL)
	}
	//MainFrame
	if flg=3 do {
		type Number in,ZER,zprefix
		type String ZRM
		set (ZER,zprefix)=0
		set ZRM=""
		set in=array.get()*100
		do CONVENC^ZITFUTL(1,in,.out,.ZER,.ZRM)
		if $L(out)<18 do {
			//set zprefix=18-$L(out)
			set zprefix=zprefix.zero(18-$L(out))
			set out=zprefix_out
		}
	}
	if flg=4 do {
		type Number in
		set in=array.get()
		set out=in.zero(fixL,2,0,0)
	}
	//Default value for mandatory date
	if flg=5 do {

		if array.get()="" set out="9999-12-31"
		else set out=array

	}
	if flg=6 do {
		//No decimal,sign representation,Right zero justify

		type Number in,zlength
		type String pre,suf,ZERO
		set ZERO=""
		set in=array.get()
		if in<0 set in=-in
		set pre=$P(in,".",1)
		set pre=pre.zero(3)
		set suf=$P(in,".",2)
		set in=pre_"."_suf
		//set zlength=in.length()
		//set ZERO=ZERO.zero(fixL-zlength)
		set zlength=suf.length()
		set ZERO=ZERO.zero(8-zlength)
		set out=in_ZERO


		//set out=in_$J("0",fixL-zlength)
	}
	quit out

GENTEST

	type IO out =Class.new("IO")
	set out.fileName =$$TRNLNM^%ZFUNC("SCAU_SPOOL")_"/TESTRQRWAIVE.txt"
	set out.openParams ="NEWV/WRITE"
	set out.recordSize =1024
	do out.open()

	set ZHEADER=$J("",140)
	do out.write(ZHEADER)
	do out.write("0011000029")
	do out.write("0021041688")
	do out.write("T")
	do out.close()

	quit

---------- THREXIT ------ Section marker
