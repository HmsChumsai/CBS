//DO NOT MODIFY  Batch for recordBSpcMerchantAcctLst|ZBCHBLKM||||||ZBLKMERCHANT|||100|32000||0|||10|10|0||0||0
---------- REVHIST ------ Section marker

---------- OPEN    ------ Section marker

	kill ^TMP("ZBLKMER")
	do READ

---------- SCHINIT ------ Section marker

---------- SCHEXEC ------ Section marker

---------- SCHPOST ------ Section marker

---------- SCHEXIT ------ Section marker

---------- THRINIT ------ Section marker

	do SYSVAR^SCADRV0()
	do INIT^SCADRV

---------- THREXEC ------ Section marker

---------- EXEC    ------ Section marker

	do Runtime.rollback()
	type String ZOM=""
	do PROC(ZCID)

	quit

PROC(ZCID)
	
	type Number isAdd
	type String ZGRP
	set ZBOUND="IN"
	type RecordZBLKMERCHANT ZBLKMER = Db.getRecord("ZBLKMERCHANT","ZBOUND,ZCID")

	if 'Db.isDefined("DEP","CID=:ZCID") quit
	type RecordDEP zdep = Db.getRecord("DEP","CID=:ZCID")
	if ZBLKMER.MERSTAT="A" set isAdd=1
	else if ZBLKMER.MERSTAT="C" set isAdd=0
	else  quit
	
	set ZGRP=zdep.grp
	if ZGRP="DDA" set ZRFLG="ZPMD"
	else if ZGRP="SAV" set ZRFLG="ZPMS"
	
	if 'isAdd do {
		if 'Db.isDefined("RFLG","RFLG=:ZRFLG,CID=:ZCID") quit
		do Db.delete("RFLG","RFLG=:ZRFLG AND CID=:ZCID")
		
	}
	else do {
		if Db.isDefined("RFLG","RFLG=:ZRFLG,CID=:ZCID") quit
		type RecordRFLG rflg= Class.new("RecordRFLG")
		set rflg.rflg=ZRFLG
		set rflg.cid=ZCID
		do rflg.setAuditFlag(1)
		do rflg.save()
		
	}
	
	quit
	

READ
	do SYSVAR^SCADRV0()
	type Date ZIMPDAT
	set ZIMPDAT=%SystemDate.toString("YEARMMDD")
	type Number i,EXIT,toTalRec
	set (EXIT,i,toTalRec)=0

	type IO in =Class.new("IO")
	set in.fileName =$$TRNLNM^%ZFUNC("SCAU_SPOOL")_"/SHARE.BPTCBACC.BATCH.SAM_"_ZIMPDAT
	set in.openParams ="READ"
	set in.recordSize =1024
	do in.open()


	for  set REC =in.read() { quit:EXIT
		type String output
		type Number ZCID
		set ZCID=""
		set i=i+1
		if i=1 quit //Skipp header
		if REC["T01" set EXIT=1 quit
		set ZCID=+$E(REC,4,13)
		set ^TMP("ZBLKMER","IN",ZCID)=$E(REC,14,14)

	}

	do in.close()


	quit

PADDING(array,flg,fixL)

	type String out
	type Number zlength
	set out=""

	//Blank padding
	if flg=1 do { 
		type String in
		set in=array.get()
		set zlength=in.length()
		set out=in_$J("",fixL-zlength)
		//set out=in_$J("""",fixL-zlength)

	}
	//Zero padding
	if flg=2 do { 
		type Number in
		set in=array.get()
		set zlength=in.length()
		set out=in.zero(fixL)
	}
	//MainFrame
	if flg=3 do { 
		type Number in,ZER,zprefix
		type String ZRM
		set (ZER,zprefix)=0
		set ZRM=""
		set in=array.get()*100
		do CONVENC^ZITFUTL(1,in,.out,.ZER,.ZRM)
		if $L(out)<18 do {
			//set zprefix=18-$L(out)
			set zprefix=zprefix.zero(18-$L(out))
			set out=zprefix_out
		}
	}
	if flg=4 do { 
		type Number in
		set in=array.get()
		set out=in.zero(fixL,2,0,0)
	}
	//Default value for mandatory date
	if flg=5 do { 

		if array.get()="" set out="9999-12-31"
		else set out=array

	}
	if flg=6 do { 
		//No decimal,sign representation,Right zero justify

		type Number in,zlength
		type String pre,suf,ZERO
		set ZERO=""
		set in=array.get()
		if in<0 set in=-in
		set pre=$P(in,".",1)
		set pre=pre.zero(3)
		set suf=$P(in,".",2)
		set in=pre_"."_suf
		//set zlength=in.length()
		//set ZERO=ZERO.zero(fixL-zlength)
		set zlength=suf.length()
		set ZERO=ZERO.zero(8-zlength)
		set out=in_ZERO


		//set out=in_$J("0",fixL-zlength)
	}
	quit out
	
ZREJ(ZCID)

	set ZERRCD=$$PADDING("E9999",1,30)
	set ZARROUT("ErrorCode")=ZERRCD
	type ResultSet zerdesc = Db.select("ERRDESC","ZUTBLITFERCD","ERRCD=:ZERRCD")
	while zerdesc.next() do {
		set ZARROUT("ErrorDesc")=$$PADDING(zerdesc.getCol(1),1,256)
	}
	set ZOM=$J("",51)
	set ZOM=$$PADDING(ZCID,2,10)
	set ZOM=$J("",7)
	set ZOM=ZOM_"10"
	set ZOM=ZOM_ZARROUT("ErrorCode")
	set ZOM=ZOM_ZARROUT("ErrorDesc")
	set ZOM=ZOM_$J("",95)
	
	set ^TMP("ZBLKMER","OUT",ZCID)=ZOM

	quit
	
GENTEST

	type IO out =Class.new("IO")
	set out.fileName =$$TRNLNM^%ZFUNC("SCAU_SPOOL")_"/TESTRQBLKMER.txt"
	set out.openParams ="NEWV/WRITE"
	set out.recordSize =1024
	do out.open()
	
	//set ZHEADER="H01"
	//set ZHEADER=ZHEADER_$J("",33)
	//set ZHEADER=ZHEADER_"2013-12-19"
	set ZHEADER=$J("",100)
	do out.write(ZHEADER)
	//set MsgBody=$J("",51)
	set MsgBody="DO1"
	do out.write(MsgBody_"0010202388"_"C")
	do out.write(MsgBody_"0001100024"_"C")
	do out.write(MsgBody_"0013000654"_"C")
	do out.write(MsgBody_"0011000037"_"C")
	do out.write("T01"_"000000000000004")
	do out.close()

	quit
	
---------- THREXIT ------ Section marker
