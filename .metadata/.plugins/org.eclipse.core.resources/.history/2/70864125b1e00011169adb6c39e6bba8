//DO NOT MODIFY  Batch For Statement Extraction|ZBCHINTF||||||ZINTFIN|||100|32000|ZTJD,CID,KEY|0|||10|10|0||0||0
---------- REVHIST ------ Section marker

---------- OPEN    ------ Section marker
	
	kill ^ZMK
	do SYSVAR^SCADRV0()
	
	type Date ZINPDAT
	set ER=0
	set ZINPDAT=TJD
	set ZINPDAT=ZINPDAT.toString("YEARMMDD")
	set ZSJD=(TJD-1)
	new %TAB,%READ
	set %TAB("ZTJD")="/DES=DATE/REQ/TYP=D/LEN=10"
	set %READ="@@%FN,,ZTJD"
	do ^UTLREAD if VFMQ="Q" quit
	
	type IO io =Class.new("IO")
	type IO io2 =Class.new("IO")
	set EXIT=0

	
	set ZFID=$$TRNLNM^%ZFUNC("SCAU_SPOOL_EXTF")_"/FCD/PSHRS.EDCMP.RMS1D06.FCD."_ZINPDAT_".txt"
	
	
	do {	
		do CHKIO(ZFID)
		if ER=1 set RM =$$^MSG(2799,ZFID) quit
		set io.fileName =ZFID
		set io.openParams ="READ"
		set io.recordSize =1024
		do io.open()
		
		catch error {
			
			new ET,RM
			set ET=error.type
			set RM=error.description
			set FROM=error.thrownAt
			//set RM="ZCOLSAVE Crash"
			write !,RM

			do ^UTLERR
		}
		
		for  set REC=io.read() { quit:EXIT
			//if REC["END OF FILE" set EXIT=1 quit
			type Date SJD,STDT,ENDT
			type String INTRFACE,KEY,FORMAT
			
			set KEY=+(REC.extract(1,10))
			set INTRFACE="RMS"
			
			set STDT=REC.extract(11,16)
			set ENDT=REC.extract(17,22)
			
			set STDT = $$FDAT^%ZM(STDT,"DDMMYY")
			set ENDT = $$FDAT^%ZM(ENDT,"DDMMYY")
			set FORMAT=REC.extract(23)
			
			//type RecordZINTFIN zint = Db.getRecord("ZINTFIN","SJD=:ZSJD,INTRFACE=:INTRFACE,KEY=:KEY",1)
			type RecordZINTFIN zint = Class.new("RecordZINTFIN")
			set zint.sjd = ZSJD
			set zint.intrface = INTRFACE
			set zint.key = KEY
			set zint.STDT=STDT
			set zint.ENDT=ENDT
			set zint.FORMAT=FORMAT
			
			do zint.save()
				
		}
		do io.close()
	}
	
	set (ER,EXIT)=0
	
	
	set ZFID2=$$TRNLNM^%ZFUNC("SCAU_SPOOL_EXTF")_"/FCD/FSA1D712."_ZINPDAT_".txt"
	
	do {
		do CHKIO(ZFID2)
		if ER=1 set RM =$$^MSG(2799,ZFID) quit
		set io2.fileName =ZFID2
		set io2.openParams ="READ"
		set io2.recordSize =1024
		do io2.open()
		
		catch error {
			
			new ET,RM
			set ET=error.type
			set RM=error.description
			set FROM=error.thrownAt
			//set RM="ZCOLSAVE Crash"
			write !,RM

			do ^UTLERR
		}
		
		for  set REC =io2.read() { quit:EXIT
			//if REC["END OF FILE" set EXIT=1 quit
			type Date SJD,STDT,ENDT
			type String INTRFACE,KEY,FORMAT
			
			
			set INTRFACE="EDATA"
			set KEY=(REC.extract(1,10))
			set KEY=+KEY
			set STDT=REC.extract(11,16)
			set ENDT=REC.extract(17,22)
			set STDT = $$FDAT^%ZM(STDT,"DDMMYY")
			set ENDT = $$FDAT^%ZM(ENDT,"DDMMYY")

			
			// type RecordZINTFIN zint = Db.getRecord("ZINTFIN","SJD=:ZSJD,INTRFACE=:INTRFACE,KEY=:KEY",1)
			type RecordZINTFIN zint = Class.new("RecordZINTFIN")
			set zint.sjd = ZSJD
			set zint.intrface = INTRFACE
			set zint.key = KEY
			set zint.STDT=STDT
			set zint.ENDT=ENDT
			set zint.FORMAT=""
			
			do zint.save()
				
		}
		do io2.close()
	}
	
---------- SCHINIT ------ Section marker

---------- SCHEXEC ------ Section marker

---------- SCHPOST ------ Section marker

---------- SCHEXIT ------ Section marker
	
	
	
	type String ZDATA
	type Date ZEXTDAT,zdate
	set ZEXTDAT=ZTJD
	set ZEXTDAT=ZEXTDAT.toString("DDMMYEAR")
	
	if $D(^ZMK("FCD718",ZTJD)) do {
		set SPACE.piece(" ",200)=" "
		type Date posDate
		set firsRecType="H"
		set posDate=%SystemDate.toString("DDMMYEAR")
		set FILLER151=SPACE.extract(1,151)
	
		set headerREC=firsRecType_posDate_FILLER151
		type IO io1=Class.new("IO")
		set io1.fileName=$$TRNLNM^%ZFUNC("SCAU_SPOOL_EXTF")_"/FCD/FCD1D718_BRAND_"_ZEXTDAT_".TXT"
		set io1.openParams="NEWV/WRITE"
		do io1.open()
		do io1.write(headerREC)
		set ZPOINTER=$O(^ZMK("FCD718",ZTJD,""))
		while 'ZPOINTER.isNull() do {
			set ZPOINTER2=$O(^ZMK("FCD718",ZTJD,ZPOINTER,""))
			while 'ZPOINTER2.isNull() do {
				type String ZDATA
				set ZDATA=^ZMK("FCD718",ZTJD,ZPOINTER,ZPOINTER2)
				do io1.write(ZDATA)
				set ZPOINTER2=$O(^ZMK("FCD718",ZTJD,ZPOINTER,ZPOINTER2))
				
			}
			set ZPOINTER=$O(^ZMK("FCD718",ZTJD,ZPOINTER))

		}
		do io1.close()
	
	}
	
	if $D(^ZMK("FCD717",ZTJD)) do {
		
	
		//set ZEXTDAT=$$DAT^%ZM(ZTJD,"DDMMYEAR")
		type IO io1=Class.new("IO")
		set io1.fileName=$$TRNLNM^%ZFUNC("SCAU_SPOOL_EXTF")_"/FCD/FCD1D717_STD_"_ZEXTDAT_".TXT"
		set io1.openParams="NEWV/WRITE"
		do io1.open()
		set FILLER=""
		set FILLER.piece(" ",112)=" "
		set zdate=ZTJD.toString("DD/MM/YYYY")
		set zspace=""
		set zspace.piece(" ",119)=" "
		set header="H"_ZEXTDAT_zspace
		do io1.write(header)
		
		set ZPOINTER=$O(^ZMK("FCD717",ZTJD,""))
		set zcount=0
		while 'ZPOINTER.isNull() do {	
			set ZPOINTER2=$O(^ZMK("FCD717",ZTJD,ZPOINTER,""))
			while 'ZPOINTER2.isNull() do {
				set zcount=zcount+1
				set ZDATA=^ZMK("FCD717",ZTJD,ZPOINTER,ZPOINTER2)
				set ZPOINTER2=$O(^ZMK("FCD717",ZTJD,ZPOINTER,ZPOINTER2))
				do io1.write(ZDATA)
			}
			set ZPOINTER=$O(^ZMK("FCD717",ZTJD,ZPOINTER))
		}
		set footer="T"_zcount.zero(15,0,1,0)_FILLER
		do io1.write(footer)
		do io1.close()
	}
	
	if $D(^ZMK("FCD716",ZTJD)) do {
		type Date headPosDt
		set SPACE.piece(" ",256)=" "
		set headRecTyp="1"
		set headPosDt=%SystemDate.toString("YEARMMDD")
		set srcSys="FCD"_SPACE.extract(1,17)
		set FILLER196=SPACE.extract(1,196)
		set headerRec="0|"_headPosDt_"|"_srcSys_"|"_FILLER196
		
		type IO io1=Class.new("IO")
		set io1.fileName=$$TRNLNM^%ZFUNC("SCAU_SPOOL_EXTF")_"/FCD/FCD1D716_"_ZEXTDAT_".TXT"
		set io1.openParams="NEWV/WRITE"
		do io1.open()
		do io1.write(headerRec)
		set ZPOINTER=$O(^ZMK("FCD716",ZTJD,""))
		while 'ZPOINTER.isNull() do {
			set ZPOINTER2=$O(^ZMK("FCD716",ZTJD,ZPOINTER,""))
			while 'ZPOINTER2.isNull() do {
				type String ZDATA
				set ZDATA=^ZMK("FCD716",ZTJD,ZPOINTER,ZPOINTER2)
				do io1.write(ZDATA)
				set ZPOINTER2=$O(^ZMK("FCD716",ZTJD,ZPOINTER,ZPOINTER2))
				
			}
			set ZPOINTER=$O(^ZMK("FCD716",ZTJD,ZPOINTER))

		}
		do io1.close()
	
	}
	
	if $D(^ZMK("FCD712",ZTJD)) do {
		
		type IO io1=Class.new("IO")
		set io1.fileName=$$TRNLNM^%ZFUNC("SCAU_SPOOL_EXTF")_"/FCD/FCD1D712_"_ZEXTDAT_".TXT"
		set io1.openParams="NEWV/WRITE"
		do io1.open()
		set ZPOINTER=$O(^ZMK("FCD712",ZTJD,""))
		while 'ZPOINTER.isNull() do {
			set ZPOINTER2=$O(^ZMK("FCD712",ZTJD,ZPOINTER,""))
			while 'ZPOINTER2.isNull() do {
				type String ZDATA
				set ZDATA=^ZMK("FCD712",ZTJD,ZPOINTER,ZPOINTER2)
				do io1.write(ZDATA)
				set ZPOINTER2=$O(^ZMK("FCD712",ZTJD,ZPOINTER,ZPOINTER2))
				
			}
			set ZPOINTER=$O(^ZMK("FCD712",ZTJD,ZPOINTER))

		}
		do io1.close()
	
	}
	
	quit
	
---------- THRINIT ------ Section marker
	
	do SYSVAR^SCADRV0()
	
	
	quit
	
---------- THREXEC ------ Section marker

---------- EXEC    ------ Section marker
	
	//type Number CID
	//type Date edate,sdate
	
	set CID=KEY
	if SJD'=ZTJD quit
	type RecordZINTFIN intf = Db.getrecord("ZINTFIN","SJD=:ZTJD,KEY=:KEY,INTRFACE=:INTRFACE")
	set edate=intf.ENDT
	set sdate=intf.STDT
	set format=intf.format
	
	if format="" do {
		do FCD712(ZTJD,CID)
		do FCD716(ZTJD,CID)
	}
	if INTRFACE="RMS" do {
		if (format="S") do STANDARD(ZTJD,CID)
		if (format="B") do BRANDING(ZTJD,CID)
	}

	quit
	
	
	
FCD716(ZTJD,CID)
	
	type String headerRec,detRec,trailRec,output,ZAUTHINFO
	type Number i,dRCcyAmt,crCcyAmt,ccyBal,ccyBal,crBthAmt,bathBal,rate,forwCcy,tranCd,authNo,authLevel,drBthAmt,transCd
	type Date headPosDt,entDt
	set (i,dRCcyAmt,crCcyAmt,ccyBal,ccyBal,crBthAmt,bathBal,rate,forwCcy,tranCd,authNo,authLevel,drBthAmt,transCd)=0
	/*
	set SPACE.piece(" ",256)=" "
	set headRecTyp="1"
	set headPosDt=%SystemDate.toString("YEARMMDD")
	set srcSys="FCD"_SPACE.extract(1,17)
	set FILLER196=SPACE.extract(1,196)
	
	set headerRec="0|"_headPosDt_"|"_srcSys_"|"_FILLER196
	*/
	if 'Db.isDefined("DEP","CID=:CID") quit
	type RecordDEP dep = Db.getRecord("DEP","CID=:CID")
	set recType="1"
	type DbSet ds = Db.selectDbSet("HIST","CID=:CID")
	while ds.next() do {
		
		type RecordHIST hist = ds.getRecord("HIST")
		set i=i+1
		if (hist.TJD<sdate),(hist.TJD>edate) quit
		set acctNo=dep.CID
		if hist.EFD.isNull() set effDt=hist.TJD.toString("YEARMMDD")
		else set effDt=hist.EFD.toString("YEARMMDD")
		set entDt=hist.TJD
		set transSerial="000"_hist.TIME
		set ztf=""
		set ZETC=hist.etc
		if Db.isDefined("ZUTBLTRCD","ETCNUM=:ZETC"),(hist.TSO["ZTF") do {
			set zetc=hist.etc
			set zitc6=hist.itc6
			type ResultSet rsztf = Db.select("ETCNUM","ZUTBLTRCD","ETC=:hist.ETC")
			if rsztf.next() set ztf=rsztf.getCol(1)
		}
		set transCd=transCd.zero(5,0,1,0)
		if 'ztf.isNull() set transCd=$$NUMETC^ZKBNKUTL(hist.etc,5,hist.itc6,ztf)
		
		set ZBRCD=hist.brcd
		set ZUID=hist.uid
		set ZTSEQ=hist.tseq
		
		if 'ZBRCD.isNull(),'ZUID.isNull(),'ZTSEQ.isNull() do {
			if Db.isDefined("TTX","ZTJD,ZBRCD,ZUID,ZTSEQ") do {
				set ZAUTHINFO=$$AUTHINFO^ZKBNKUTL() 
				set authNo=ZAUTHINFO.piece("|",1)
				set authLevel=ZAUTHINFO.piece("|",2)
			}
		}
		set authNo=authNo.zero(5,0,1,0)
		set authLevel=authLevel.zero(5,0,1,0)
		
		set tellerNo=$$USERID^ZKBNKUTL(hist.uid,5)
		set srvBrNo=hist.BRCD
		
		

		if hist.itc=0 set dRCcyAmt = hist.tot.zero(16,2,1,0)
		else set dRCcyAmt=dRCcyAmt.zero(16,2,1,0)
		
		if hist.itc=1 set crCcyAmt = hist.tot.zero(16,2,1,0)
		else set crCcyAmt=crCcyAmt.zero(16,2,1,0)
		
		set ccyBal=hist.endbal.zero(16,2,1,0)
		
		if ccyBal'<0 set ccySgn="C"
		else set ccySgn="D"
		
		set ccyBal=hist.ENDBAL
		
		if hist.itc=0 set drBthAmt=hist.TAMT.zero(16,2,1,0)
		else set dtBthAmt=drBthAmt.zero(16,2,1,0)
		
		if hist.itc=1 set crBthAmt=hist.TAMT
		else set crBthAmt=crBthAmt.zero(16,2,1,0)
		
		set bthSgn=ccySgn
		set bathBal=hist.endbal.zero(16,2,1,0)
		set crcd=hist.crcd
		if 'crcd.isNull() do {
		
			if Db.isDefined("CRCD","CO=:%CO,CRCD=:crcd") do {
				type RecordCRCD zcrcd = Db.getRecord("CRCD","CO=:%CO,CRCD=:crcd")
				set rate=zcrcd.midrate.zero(12,2,1,0)
			}
			else set rate=rate.zero(12,2,1,0)
		}
		
		if (hist.TSO.isNull())!('(hist.TSO["ZREFNO")) set ref=SPACE.extract(1,16)
		else do {
			set zref=hist.TSO.piece("ZREFNO",2)
			set ref=SPACE.extract(1,(20-zref.length()))_zref
		}
		
		set rate=rate.zero(12,2,1,0)
		set forwCcy=dep.posacr.zero(16,2,1,0)
		set crcd=hist.crcd
		set forTyp="001"
		
		set detRec="1|"_acctNo_"|"_effDt_"|"_entDt_"|"_transSerial_transCd_"|"_tellerNo_"|"_srvBrNo_"|"_authNo_"|"_authLevel_"|"_dRCcyAmt_"|"_crCcyAmt_"|"_ccySgn
		set detRec=detRec_"|"_ccyBal-"|"_drBthAmt_"|"_crBthAmt_"|"_bthSgn_"|"_bathBal_"|"_rate_"|"_ref_"|"_forwCcy_"|"_crcd_"|"_"001|"
		
		set tailRecNo=i.zero(8,0,1,0)
		set trailRec="9|"_tailRecNo_"|"_SPACE.extract(1,217)
		
		set output=detRec
		
		
		set pos=$O(^ZMK("FCD716",ZTJD,CID,""),-1)
		if pos.isNull() set pos=1
		else set pos=pos+1
		
		set ^ZMK("FCD716",ZTJD,CID,pos)=output
		set ^ZMK("FCD716",ZTJD,CID,pos+1)=trailRec
		 
		
	}
	
	quit
	
	
		
STANDARD(ZTJD,CID)
	//d STANDARD^ZBCHINTF(62639,9200304)
	type String header,detail,footer,zspace,ZOUT,FWDTAG
	type Date zdate
	type Number total,ZNODATA,pos
	set zdate=ZTJD
	set zdate=ZTJD.toString("DDMMYEAR")
	set zspace=""
	set zspace.piece(" ",256)=" "
	set header="H"_zdate_zspace.extract(1,119)
	set total=0
	
	//set ^ZMK("FCD717",ZTJD,CID,1)=header
	//type DbSet ds = Db.selectDbSet("ZINTFIN","SJD=:ZTJD AND KEY=:CID")
	
	//while ds.next() do {
		
		//type Date sdate,edate
	type Number zrange,NoDataFlg,isDetail,isFirst,isLast
	set (NoDataFlg,isDetail)=0
	set isFirst=1
	set edate=edate.toString("DDMMYEAR")
	set sdate=sdate.toString("DDMMYEAR")

		
		//Check HIST 
		//if no hist trans. do Nodata
		//else get previous,forward balance info.
		
		//
	set pos=$O(^ZMK("FCD717",ZTJD,CID,""),-1)
	if pos.isNull() set pos=1
	else set pos=pos+1
	
	if 'Db.isDefined("DEP","CID=:CID") set ^ZMK("FCD717",ZTJD,CID,pos)=$$NODATA(CID) quit
	type Number i
	set i=0 
	set zsdate=sdate-1
	set zedate=edate+1
	set ZNODATA=1
	type ResultSet rs = Db.select("TSEQ","HIST","CID=:CID AND TJD>:zsdate AND TJD<:zedate AND ITC<>'' AND PRIN<>0")
	while rs.next() do { 
		
		
		
		type Date tranDT,CLOSEDT
		type Number ZSEQ,RECTYPE,ACCTNO,BANKNO,BRANCHNO,balAMT,transAMT,closeBalAMT,avalBal,PREVTAG,pos
		type String balSGN,dRcRMARK,transCD,serial1,serial2,CRCD,FILLERWK,UID,CHQNO,cntry,EFFDT,closeBalSGN,avalBalSGN,ZDATA
		set (balSGN,dRcRMARK,transCD,serial1,serial2,CRCD,FILLERWK,UID,CHQNO,cntry,EFFDT,closeBalSGN,avalBalSGN,PREVTAG,ZDATA)=""
		set (RECTYPE,ACCTNO,BANKNO,BRANCHNO,balAMT,transAMT,closeBalAMT,avalBal)=0
		set ZSEQ=rs.getCol(1)	
		type RecordHIST hist = Db.getRecord("HIST","CID=:CID,TSEQ=:ZSEQ")

		set ztjd=hist.TJD
		
		set ACCTNO=CID.zero(15,0,1,0)
		set BANKNO="004"
										
		type RecordDEP dep = Db.getRecord("DEP","CID=:CID")
		set BRANCHNO=(dep.boo).zero(4,0,1,0)
			//Set up PreviousBal if this is the first sequence
		if isFirst do {
			set isFirst=0
			type String openBalSgn,ACCTNAME,FILLER50
			type Date OPENDT
			type Number openBalAmt,acctLth
			set (openBalAmt,acctLth)=0						
			set (openBalSgn,ACCTNAME,FILLER50)=""
			set FILLER50.piece(50," ")=" "
			set acctLth=$L(dep.zeactnam)
			set ACCTNAME=zspace.extract(1,(30-acctLth)_dep.ZEACTNAM)
			set RECTYPE="1"
						
			set OPENDT=$$DAT^%ZM(sdate,"DDMMYEAR")	
			//set OPENDT=sdate.toString("DDMMYEAR")
			if (%SystemDate-sdate)<6 do {
						
				if %SystemDate-sdate=1 set openBalAmt=dep.EODBALAV.zero(16,2,1,0)
				if %SystemDate-sdate=2 set openBalAmt=dep.EODBALAVL2.zero(16,2,1,0)
				if %SystemDate-sdate=3 set openBalAmt=dep.EODBALAVL3.zero(16,2,1,0)
				if %SystemDate-sdate=4 set openBalAmt=dep.EODBALAVL4.zero(16,2,1,0)
				if %SystemDate-sdate=5 set openBalAmt=dep.EODBALAVL5.zero(16,2,1,0)
			}
			set tempdate=sdate-1
			else do {
						
				type ResultSet rsprev = Db.select("ENDBAL,TSEQ","HIST","CID=:CID AND TJD=:tempdate","TSEQ DESC")
				if rsprev.next() set openBalAmt=rsprev.getCol(1) quit    
			}
			set openBalAmt=openBalAmt.zero(16,2,1,0)
					//if $D(openBalAmt)=0 set openBalAmt.piece("0",16)="0"
					
			if openBalAmt>0 set openBalSgn = "C"
			else set openBalSgn = "D"
			set FILLER50=zspace.extract(1,50)
			set PREVTAG=RECTYPE_ACCTNO_BANKNO_BRANCHNO_OPENDT_openBalAmt_openBalSgn_ACCTNAME_FILLER50
			set pos=$O(^ZMK("FCD717",ZTJD,CID,""),-1)
			if pos.isNull() set pos=1
			else set pos=pos+1
			set ^ZMK("FCD717",ZTJD,CID,pos)=PREVTAG
			write !,"PREVTAG ="_PREVTAG
		}
					
		set RECTYPE="2"
		set i=i+1
		set transDT=(hist.TJD).toString("DDMMYEAR")
		set balAMT = (hist.ENDBAL).zero(16,2,1,0)
						
		if balAMT>0 set balSGN="C"
		else set balSGN="D"
						
		if hist.TOT<0 set transAMT=hist.TOT.zero(15,2,1,0)
		else set transAMT=(hist.TOT).zero(15,2,1,0)
						
		set dRcRMARK="  "
		if hist.ITC1=1 set dRcRMARK = " C"
		if hist.ITC1=0 set dRcRMARK = " D"
		if (hist.ITC1=1),(hist.ITC6=1) set dRcRMARK = "RC"
		if (hist.ITC1=0),(hist.ITC6=1) set dRcRMARK = "RD"
						
		if hist.ZPRNETC.isNull() set transCD="    "
		else set transCD = zspace.extract(1,4-(hist.ZPRNETC.length()))_hist.ZPRNETC
						
		set UID="0000"
		if '(hist.uid).isNull() set UID=$$USERID^ZKBNKUTL(hist.uid,4)
						//if UID.beginsWith("K"),UID.length()=8 set UID=UID.extract(4,7)
						
		if (hist.TSO.isNull())!('(hist.TSO["ZDDNO")) set CHQNO="0000000"
		else set CHQNO=+(hist.TSO.piece("ZDDNO#",2))
		set CHQNO=CHQNO.zero(7,0,1,0)
						
		if (hist.TSO.isNull())!('(hist.TSO["ZTFREF")) set serial1=zspace.extract(1,20)
		else set serial1=+(hist.TSO.piece("ZTFREF#",2))
					
		set serial1=zspace.extract(1,20-(serial1.length()))_serial1
						
		set serial2=zspace.extract(1,5)
						
		if (hist.TSO.isNull())!('(hist.TSO["ZORGC")) set cntry=zspace.extract(1,2)
		else  do {
			set cntry=(hist.TSO.piece("ZORGC#",2))
			set cntry=cntry.piece("~",1)
		}	
		if (hist.EFD.isNull())!(hist.EFD=TJD) set EFFDT=zspace.extract(1,8)
		else  set EFFDT=hist.EFD.toString("DDMMYEAR")
					
					//if (hist.crcd="US1")!(hist.crcd="US2")!(hist.crcd="US3") set zcrcd="USD"
					//else set zcrcd="   "
					
		if hist.crcd.isNull() set zcrcd="   "
		else  set zcrcd=zspace.extract(1,3-(hist.crcd.length()))_hist.crcd
						
		set FILLERWK=zspace.extract(1,10)
		set ZDATA=RECTYPE_ACCTNO_BANKNO_BRANCHNO_transDT_balAMT_balSGN_transAMT_dRcRMARK_transCD
		set ZDATA=ZDATA_UID_CHQNO_serial1_serial2_cntry_EFFDT_zcrcd_FILLERWK
						
		set pos=$O(^ZMK("FCD717",ZTJD,CID,""),-1)
		if pos.isNull() set pos=1
		else  set pos=pos+1
						
		set ^ZMK("FCD717",ZTJD,CID,pos)=ZDATA
		write !,"Detail ="_ZDATA

		set RECTYPE="3"
		set CLOSEDT=edate.toString("DDMMYEAR")
		if hist.endbal.isNull() set closeBalAMT=closeBalAMT.zero(16,2,1,0)
		else  set closeBalAMT=hist.endbal.zero(16,2,1,0)
			
		if closeBalAMT>0 set closeBalSGN="C"
		else  set closeBalSGN="D"
					
		if (%SystemDate-edate)=1 set avalBal=dep.EODBALAV.zero(16,2,1,0)
		else  if (%SystemDate-edate)=2 set avalBal=dep.EODBALAVL2.zero(16,2,1,0)
		else  if (%SystemDate-edate)=3 set avalBal=dep.EODBALAVL3.zero(16,2,1,0)
		else  if (%SystemDate-edate)=4 set avalBal=dep.EODBALAVL4.zero(16,2,1,0)
		else  if (%SystemDate-edate)=5 set avalBal=dep.EODBALAVL5.zero(16,2,1,0)
		else  set avalBal=closeBalAMT
						
						
					
		if avalBal>=0 set avalBalSGN="C"
		else  set avalBalSGN="D"
		set total = i+2
		set total = total.zero(6,0,1,0)
		set FILLER57=zspace.extract(1,57)
		set FWDTAG=RECTYPE_ACCTNO_BANKNO_BRANCHNO_CLOSEDT_closeBalAMT_closeBalSGN_avalBal_avalBalSGN_total_FILLER57
		
		set ZNODATA=0
		
	}		

	
	
	set FILLER=""
	set FILLER.piece(" ",112)=" "
	//set footer="T"_total.zero(15,0,1,0)_FILLER
	
	
	set recType="5"
	set FILLER102=zspace.extract(1,102)

	
	set pos=$O(^ZMK("FCD717",ZTJD,CID,""),-1)
	if pos.isNull() set pos=1
	else set pos=pos+1
	
	if 'ZNODATA set ^ZMK("FCD717",ZTJD,CID,pos)=FWDTAG	
	else set ^ZMK("FCD717",ZTJD,CID,pos)=$$NODATA(CID) quit
	//set ^ZMK("FCD717",ZTJD,CID,pos)=FWDTAG

	

	
	quit
	
	
NODATA(ZCID)
	//w $$NODATA^ZBCHINTF(9200304)
	type String ZDATA,ZSPACE
	
	set ZSPACE=""
	set ZSPACE.piece(" ",105)=" "
	set ZCID=ZCID.zero(15,0,1,0)
	set ZDATA="1"_ZCID_"NO DATA"_ZSPACE
	
	quit ZDATA
	
		
BRANDING(ZTJD,CID)
	
	
	type String transArr()
	type String header,footer,firsRecType,FILLER,SPACE,RECTYPE,headerREC,brNam,addr1,addr2,titleNam
	type Date posDate
	type Number depCnt,withCnt,totAmtDr,totAmtCr,i,curPage,pageCount,accNo
	type String prevBal,fwdBal
	set (depCnt,totAmtDr,totAmtCr,withCnt)=0
	if 'Db.isDefined("DEP","CID=:CID") quit
	type RecordDEP dep = Db.getRecord("DEP","CID=:CID")
	set FILLER1=" "		
	
	set SPACE.piece(" ",200)=" "
	/*
	set firsRecType="H"
	set posDate=%SystemDate.toString("DDMMYEAR")
	set FILLER151=SPACE.extract(1,151)
	
	set headerREC=firsRecType_posDate_FILLER151
	
	set ^ZMK("FCD718",ZTJD,CID,1)=headerREC
	*/
	
	set recType="1"
	set FILLER121=SPACE.extract(1,121)
	set zboo=dep.boo.zero(3,0,1,0)
	set brNoCng=zboo_SPACE.extract(1,3-zboo.length())
	set FILLER35=SPACE.extract(1,35)
	
	set cngBrRec=recType_FILLER121_brNoCng_FILLER35
	
	
	
	set namLabel="NAME"
	
	if (dep.ZEACTNAM.length())<53 set titleNam=dep.ZEACTNAM_SPACE.extract(1,53-(dep.ZEACTNAM.length()))
	else set titleNam=dep.ZEACTNAM.extract(1,53)
	
	set ZBRCD=dep.boo
	
	if Db.isDefined("ZUTBLBRCD","BRCD=:ZBRCD") do {
		type RecordZUTBLBRCD brcd = Db.getRecord("ZUTBLBRCD","BRCD=:ZBRCD")
		if (brcd.ENGNAM.length())<30 set brNam=brcd.ENGNAM_SPACE.extract(1,30-(brcd.ENGNAM.length()))
		else set brNam=brcd.ENGNAM.extract(1,30)
	}
	else set brNam=SPACE.extract(1,30)
	set FILLER70=SPACE.extract(1,70)
	
	set custNamBrNam=recType_namLabel_FILLER1_titleNam_FILLER1_brNam_FILLER70
	
	set addrLabel="ADDRESS"

	
	if Db.isDefined("ACNADDR","CID=:CID") do {
		type RecordACNADDR zddr = Db.getRecord("ACNADDR","CID=:CID")
		set addr1=(zddr.AD1).extract(1,50)
		set addr2=(zddr.AD2).extract(1,50)
	}	
	set FILLER101=SPACE.extract(1,101)
	if addr1.length()<50 set addr1=addr1_SPACE.extract(1,50-(addr1.length()))
	if addr2.length()<50 set addr2=addr2_SPACE.extract(1,50-(addr2.length()))
	
	set addrRec=FILLER1_addrLabel_FILLER1_addr1_FILLER101
	
	set FILLER8=SPACE.extract(1,8)
	set accLabel="ACCOUNT NO.       "
	set accNo=dep.CID.zero(10,0,1,0)
	set accNo=accNo.insert("-",4,,1)
	set accNo=accNo.insert("-",7,,1)
	set accNo=accNo.insert("-",12,,1)
	set currTitle="CURRENCY "
	set currNam=dep.crcd_SPACE.extract(1,(3-dep.CRCD.length()))
	set dateLabel="DATE       "
	set todayDt=%SystemDate.toString("DDMMYEAR")_"  "
	set FILLER35=SPACE.extract(1,35)
	
	set addr2AcNo=FILLER8_addr2_FILLER1_accLabel_" "_accNo_currTitle_currNam_dateLabel_todayDt_FILLER35
	
	set FILLER4=SPACE.extract(1,4)		
	set recType="2"
	set dateLabel="DD/MM/YY    "
	set FILLER3="   "
	set desLabel="DESCRIPTION"
	set FILLER19=SPACE.extract(1,19)
	set dRdCLabel="DEBIT/CREDIT      "
	set balLabel="BALANCE            "
	set bnkLabel="BANK USE ONLY"_SPACE.extract(1,24)
	set refNo="REFERENCE-NO"_SPACE.extract(1,20)
	
	set headRec=recType_dateLabel_FILLER3_desLabel_FILLER19_dRdCLabel_FILLER3_balLabel_FILLER1_bnkLabel_FILLER4_refNo
		
	set recType="3"
	set FILLER8=SPACE.extract(1,8)
	set prevLabel="PREVIOUS BALANCE"_SPACE.extract(1,24)
	set FILLER34=SPACE.extract(1,34)
	


	set endbal=$$ENDBAL^ZEXTUTL(dep,sdate)
	set endbal=$FN(endbal,",",2)
	set prevBal=SPACE.extract(1,(22-endbal.length()))_endbal
	set FILLER21=SPACE.extract(1,55)
		
	set prevBalrec=recType_FILLER8_prevLabel_FILLER34_prevBal_FILLER21
	
	
	
	set (i,NODATA)=0
	set EXIT=0
	set zedate=edate+1
	set zsdate=sdate-1
	type ResultSet rshist = Db.select("TSEQ","HIST","CID=:CID AND TJD>:zsdate AND TJD<:zedate AND ITC<>'' AND PRIN<>0")

	//type DbSet ds = Db.selectDbSet("HIST","CID=:CID")
	if rshist.isEmpty() set NODATA=1			
	while rshist.next() do {
		
		type Number zeRo = 0
		type String drAmt,crAmt,bal,tranRec
		type Date entDt,effDate
		set ZTSEQ=rshist.getCol(1)
		type RecordHIST hist=Db.getRecord("HIST","CID=:CID,TSEQ=:ZTSEQ")
		
		
		set i=i+1
			
		//set (drAmt,crAmt,bal)=0
		set trDesc=SPACE.extract(1,40)	
		set effDate=hist.TJD.toString("DDMMYY")_"  "
		if 'hist.etc.isNull() do {
			if 'Db.isDefined("TRN","ETC=hist.etc") quit
			type RecordTRN trn = Db.getRecord("TRN","ETC=:hist.etc")
			set trDesc=trn.des
		}
		if trDesc.length()<40 set trDesc=trDesc_SPACE.extract(1,40-(trDesc.length()))
		
			
		if hist.ITC1=0 do {
			set withCnt=withCnt+1
			set totAmtDr=totAmtDr+hist.TOT
			//set drAmt=hist.TOT.zero(17,2,0,0)
			set drAmt=$FN(hist.TOT,",",2)
			
			set crAmt=SPACE.extract(1,17)

		}
		else  do {
			set drAmt=SPACE.extract(1,17)
			set depCnt=depCnt+1
			set totAmtCr=totAmtCr+hist.TOT
			//set crAmt=hist.TOT.zero(17,2,0,0)
			set crAmt=$FN(hist.TOT,",",2)
		}
		
		if drAmt.length()<17 set drAmt=SPACE.extract(1,(17-drAmt.length()))_drAmt
		if crAmt.length()<17 set crAmt=SPACE.extract(1,(17-crAmt.length()))_crAmt			
		set bal=hist.ENDBAL.zero(17,2,0,1)
		set bal=$FN(bal,",",2)
		set bal=SPACE.extract(1,(22-bal.length()))_bal
		
		
		
			
		set serBrNo=(hist.brcd).zero(3,0,1,0)
		set usrNo=$$USERID^ZKBNKUTL(hist.uid,5)						
		if hist.EFD.isNull() set entDt=hist.TJD.toString("DDMMYY")
		else set entDt=hist.EFD.toString("DDMMYY")
		set FILELR6=SPACE.extract(1,6)
		
		if (hist.TSO.isNull())!('(hist.TSO["ZORGC")) set cntryCd=SPACE.extract(1,2)
		else do {
			set cntryCd=(hist.TSO.piece("ZORGC#",2))
			set cntryCd=cntryCd.piece("~",1)
		}
			
		set serial1 =SPACE.extract(1,20)
		set serial2 =SPACE.extract(1,5)
		set FILLER6=SPACE.extract(1,6)
			
		set tranRec=FILLER1_effDate_trDesc_drAmt_crAmt_bal_serBrNo_FILLER1_usrNo_FILLER1_entDt_FILLER6_cntryCd_serial1_serial2_FILLER6
		
		set transArr(i)=tranRec
				
	}		
	set fwdLabel="FORWARD BALANCE"
	set fwdLabel=fwdLabel_SPACE.extract(1,(40-fwdLabel.length()))

	set endbal=$$ENDBAL^ZEXTUTL(dep,edate)
	set endbal=$FN(endbal,",",2)
	set fwdBal=SPACE.extract(1,(22-endbal.length()))_endbal
	set FILLER34=SPACE.extract(1,34)
	set FILLER55=SPACE.extract(1,55)
	
	set fwdBalRec=" "_fwdLabel_FILLER34_fwdBal_FILLER55
	

	type String ztotAmtDr,ztotAmtCr
	set drDsc="TOTAL WITHDRAWAL ="_SPACE.extract(1,17)
	set crDsc="TOTAL DEPOSIT  ="_SPACE.extract(1,19)
	set drTot=withCnt.zero(4,0,1,0)
	set crTot=depCnt.zero(4,0,1,0)
	
	
	set totAmtDr=totAmtDr.zero(17,2,0,1)
	set totAmtDr=$FN(totAmtDr,",",2)
	set ztotAmtDr=SPACE.extract(1,17-(totAmtDr.length()))_totAmtDr
	
	set totAmtCr=totAmtCr.zero(17,2,0,1)
	set totAmtCr=$FN(totAmtCr,",",2)
	set ztotAmtCr=SPACE.extract(1,17-(totAmtCr.length()))_totAmtCr
	
	
	set itemLabel="ITEM  "
	set FILLER77=SPACE.extract(1,77)
	
	set drRec=" "_drDsc_drTot_"   "_itemLabel_ztotAmtDr_FILLER77
	set crRec=" "_crDsc_crTot_"   "_itemLabel_ztotAmtCr_FILLER77
	
	set recType="5"
	set FILLER102=SPACE.extract(1,102)
	set PAGE=""
	set FILLER41=SPACE.extract(1,41)
	
	set pos=$O(^ZMK("FCD718",ZTJD,CID,""),-1)
	if pos.isNull() set pos=1
	else set pos=pos+1
	
	if NODATA do {
		set ^ZMK("FCD718",ZTJD,CID,pos)=cngBrRec
		set ^ZMK("FCD718",ZTJD,CID,pos+1)=custNamBrNam
		set ^ZMK("FCD718",ZTJD,CID,pos+2)=addrRec
		set ^ZMK("FCD718",ZTJD,CID,pos+3)=addr2AcNo
		set ^ZMK("FCD718",ZTJD,CID,pos+4)=headRec
		set ^ZMK("FCD718",ZTJD,CID,pos+5)=prevBalrec
		set ^ZMK("FCD718",ZTJD,CID,pos+6)=fwdBalRec
		set ^ZMK("FCD718",ZTJD,CID,pos+7)="5"_FILLER102_"   00001/0000001"_FILLER41
	}
	
	else do {
		set trnPos=$O(transArr(""))
		set curPage=1
		set pageCount=i/26
		set pageCount=pageCount.roundDec(0,"+")
		set pageCount=pageCount.zero(7,0,1,0)
		
		set zCnt=0


		while i>0 do {
			set EXIT=0		
			set ^ZMK("FCD718",ZTJD,CID,pos)=cngBrRec, pos=pos+1
			set ^ZMK("FCD718",ZTJD,CID,pos)=custNamBrNam, pos=pos+1
			set ^ZMK("FCD718",ZTJD,CID,pos)=addrRec, pos=pos+1
			set ^ZMK("FCD718",ZTJD,CID,pos)=addr2AcNo, pos=pos+1
			set ^ZMK("FCD718",ZTJD,CID,pos)=headRec, pos=pos+1
			if curPage=1 set ^ZMK("FCD718",ZTJD,CID,pos)=prevBalrec, pos=pos+1
			else set ^ZMK("FCD718",ZTJD,CID,pos)=prevBalrec.extract(1,83)_transArr(trnPos-1).extract(84,105), pos=pos+1
				while 'trnPos.isNull() do { quit:EXIT
				set zCnt=zCnt+1
				set ^ZMK("FCD718",ZTJD,CID,pos)=transArr(trnPos), pos=pos+1
				set i=i-1
				set trnPos=$O(transArr(trnPos))
				if zCnt=26 set EXIT=1,zCnt=0 quit
				
			}
			if ('trnPos.isNull()) set ^ZMK("FCD718",ZTJD,CID,pos)=fwdBalRec.extract(1,83)_transArr(trnPos-1).extract(84,105), pos=pos+1
			//else if '(curPage=1),('trnPos.isNull()) set ^ZMK("FCD718",ZTJD,CID,pos)=fwdBalRec.extract(1,83)_transArr(trnPos-1).extract(84,105), pos=pos+1
			else set ^ZMK("FCD718",ZTJD,CID,pos)=fwdBalRec, pos=pos+1
			if trnPos.isNull() do {
				set ^ZMK("FCD718",ZTJD,CID,pos)=drRec, pos=pos+1
				set ^ZMK("FCD718",ZTJD,CID,pos)=crRec, pos=pos+1
			}
			set curPage=curPage.zero(5,0,1,0)
			set ^ZMK("FCD718",ZTJD,CID,pos)="5"_FILLER102_"   "_curPage_"/"_pageCount_FILLER41, pos=pos+1
			set curPage=curPage+1
				
		}
	}
				
	quit
TEST
		type IO io1=Class.new("IO")
		set io1.fileName=$$TRNLNM^%ZFUNC("SCAU_SPOOL_EXTF")_"/FCD/FCD1D718_BRAND_"_ZEXTDAT_".TXT"
		set io1.openParams="NEWV/WRITE"
		do io1.open()
		set ZPOINTER=$O(^ZMK("FCD718",ZTJD,""))
		while 'ZPOINTER.isNull() do {
			set ZPOINTER2=$O(^ZMK("FCD718",ZTJD,ZPOINTER,""))
			while 'ZPOINTER2.isNull() do {
				type String ZDATA
				set ZDATA=^ZMK("FCD718",ZTJD,ZPOINTER,ZPOINTER2)
				do io1.write(ZDATA)
				set ZPOINTER2=$O(^ZMK("FCD718",ZTJD,ZPOINTER,ZPOINTER2))
				
			}
			set ZPOINTER=$O(^ZMK("FCD718",ZTJD,ZPOINTER))

		}
		
		quit
	
BRANDINGNODATA

	set pos=$O(^ZMK("FCD718",ZTJD,CID,""),-1)
	if pos.isNull() set pos=1
	else set pos=pos+1
	
	set ^ZMK("FCD718",ZTJD,CID,pos)=cngBrRec
	set ^ZMK("FCD718",ZTJD,CID,pos+1)=custNamBrNam
	set ^ZMK("FCD718",ZTJD,CID,pos+2)=addrRec
	set ^ZMK("FCD718",ZTJD,CID,pos+3)=addr2AcNo
	set ^ZMK("FCD718",ZTJD,CID,pos+4)=headRec
	set ^ZMK("FCD718",ZTJD,CID,pos+5)=prevBalrec
	set ^ZMK("FCD718",ZTJD,CID,pos+6)=fwdBalRec
	set ^ZMK("FCD718",ZTJD,CID,pos+7)="5"_FILLER102_"   00001/0000001"_FILLER41
	
	quit
	
		
FCD712(ZTJD,CID)
		if 'Db.isDefined("DEP","CID=:CID") quit
		type RecordDEP dep = Db.getRecord("DEP","CID=:CID")
		set SPACE.piece(" ",256)=" "
		set ZACN=dep.acn
		if 'Db.isDefined("CIF","ACN=:ZACN") quit
		type RecordCIF cif = Db.getRecord("CIF","ACN=:ZACN")
		type String FILLER1,crcd,output
		type Number acctNo,accBthBal,curBthBal,bthIrn,bthTaxAmt,fwdAccTax,pedBthOut,pedBthOut2,hldType
		type Number hldbal,hldAcc
		set (accBthBal,curBthBal,bthIrn,bthTaxAmt,fwdAccTax,pedBthOut,pedBthOut2,hldType,hldbal,hldAcc,acctNo)=0
		type Date openDt,pedDt,closeDt,dtlastMaint,accCcyBal,lastTrasDt
		set recTypeDet="1"
		set FILLER1="|"
		set acctNo=CID.zero(11,0,1,0)
		set crcd=dep.crcd.zero(3,0,1,0)
		set openDt=dep.ODT.toString("YEARMMDD")
		set closeDt=dep.DTC.toString("YEARMMDD")
		set dtlastMaint=dep.FMLD.toString("YEARMMDD")
		set accCcyBal=dep.EODBAL.zero(16,2,1,1)
		
		if Db.isDefined("CRCD","CO=:%CO,CRCD=:crcd") do {
			type RecordCRCD zcrcd = Db.getRecord("CRCD","CO=:%CO,CRCD=:crcd")
			set accBthBal=(dep.EODBAL*zcrcd.MIDRATE).zero(16,2,1,1)
			set curBthBal=(dep.BAL*zcrcd.MIDRATE).zero(16,2,1,1)
			set bthIrn=(dep.POSACR*zcrcd.ZEXPR).zero(16,4,1,1)
			set bthTaxAmt=(dep.BWTYTD*zcrcd.ZSELR).zero(16,2,1,1)
			set fwdAccTax=(dep.IYTD*zcrcd.ZEXPR).zero(16,2,1,1)
			set pedBthOut=(dep.MEBAL6*zcrcd.MIDRATE).zero(16,2,1,1)
			set pedBthOut2=(dep.mebal12*zcrcd.MIDRATE).zero(16,2,1,1)
			
		}
		else do {
			set accBthBal=accBthBal.zero(16,2,1,1)
			set curBthBal=curBthBal.zero(16,2,1,1)
			set bthIrn=bthIrn.zero(16,2,1,1)
			set bthTaxAmt=bthTaxAmt.zero(16,2,1,1)
			set fwdAccTax=fwdAccTax.zero(16,2,1,1)
			set pedBthOut=pedBthOut.zero(16,2,1,1)
			set pedBthOut2=pedBthOut2.zero(16,2,1,1)
		}
		set lastTrasDt=dep.TLD.toString("YEARMMDD")
		if dep.STAT=4 set miscAccStat=" O"
		else set miscAccStat=" C"
		set miscCd="   "
		if Db.isDefined("ZUTBLFCDTAC","CID=:CID") do {
			type RecordZUTBLFCDTAC FCDTAC = Db.getRecord("ZUTBLFCDTAC","CID=:CID")
			set fcdType=FCDTAC.TYPE
			type ResultSet rsfcdTyp = Db.select("KBFCDTYP","ZUTBLFCDTYP","TYPE=:fcdType")
			if rsfcdTyp.next() set miscCd=rsfcdTyp.getCol(1)
		}
		set curCcyBal=dep.BAL.zero(16,2,1,1)
		set holdCnt=0
		type ResultSet phld = Db.select("THLDAMT,PHC,ZHLDACT","PHLD","CID=:CID")
		while phld.next() do {
			set holdCnt=holdCnt+1
			set THLDAMT=phld.getCol(1)
			set hldbal=hldbal+THLDAMT
			set hldType=phld.getCol(2)
			set hldAcc=phld.getCol(3)
		}
		if holdCnt>1 set hldType="099"
		set hldTypee=hldType.zero(3,0,1,0)
		set hldbal=hldbal.zero(16,2,1,1)
		set hldAcc=hldAcc.zero(11,0,1,0)
		set spcRate=dep.IRN.zero(5,2,1,0)
		set ccyIrn=dep.POSACR.zero(16,4,1,1)
		set pbkNo=dep.PBKSN.zero(11,0,1,0)
		set lineNo=dep.PBKLIN.zero(3,0,1,0)
		set ccyTaxAmt=dep.bwtytd.zero(16,2,1,1)
		set stpCalFlg="0"
		set curDt=%SystemDate.toString("DDMMYEAR")
		set cusType=cif.zktbccode
		if Db.isDefined("ZUTBLWREXAMT","WHCALMTH=:dep.INTWCALC") do {
			type RecordZUTBLWREXAMT wrex = Db.getRecord("ZUTBLWREXAMT","WHCALMTH=:dep.INTWCALC")
			set taxkey=wrex.TAXKEY
		}
		set fwdAccInt=dep.IYTD.zero(16,0,1,1)
		set custId=dep.ACN
		set dedFeeAccNo=dep.ZSAFEACT
		set noNobk="000"
		set pedCcyOut=dep.MEBAL6.zero(16,2,1,1)
		set pedCcyOut2=dep.mebal12.zero(16,2,1,1)
		if dep.crcd="USD" set bbDepCom="0.25x000D" 
		else set bbDepCom="0.5x000D" 
		set bbWithCom=bbDepCom
		set bnDepCom="000000001"
		set bnWithCom="000000001"
		set ttDepCom="000000025"
		set ttWithCom=bbDepCom
		set lastDepDt=dep.DTLC.toString("DDMMYEAR")
		set lastIntDt=dep.IPLD.toString("DDMMYEAR")
		set tdBnCcy="+000000000000000"
		set pedDt=dep.ipld.toString("DDMMYEAR")
		set taxid=cif.taxid
		set fwdCcyInt="+000000000000000"
		set engNam=SPACE.extract(1,50-(cif.zenam.length()))_cif.zenam
		type RecordACNADDR acnaddr = Db.getRecord("ACNADDR","CID=:CID")
		if acnaddr.ad1.isNull() set add1=SPACE.extract(1,50)
		else set add1=acnaddr.ad1.extract(1,50)
		if acnaddr.ad2.isNull() set add2=SPACE.extract(1,50)
		else set add2=acnaddr.ad2.extract(1,50)
		set cntry=SPACE.extract(1,20-(cif.rescd.length()))_cif.rescd
		set nation=SPACE.extract(1,20-(cif.nation.length()))_cif.nation
		set passNum=SPACE.extract(1,20-(cif.pasnum.length()))_cif.pasnum
		set phoneNum=SPACE.extract(1,20)
		set faxNum=SPACE.extract(1,20)
		set email=SPACE.extract(1,20-(cif.EMAIL.length()))_cif.EMAIL
		if cif.type=0 set idNo=SPACE.extract(1,20-(cif.zcizid.length()))_cif.zcizid
		else set idNo=SPACE.extract(1,20-(cif.zjin.length()))_cif.zjin
		set sysType="0000000"
		set oldCustId="00000000000"
		set output="1|"_acctNo_crcd_"|"_openDt_"|"_closeDt_"|"_dtlastMaint_"|"_accCcyBal_"|"_accBthBal_"|"_lastTrasDt_"|"_miscAccStat_"|"_miscCd_"|"_curCcyBal_"|"_curBthBal_"|"_hldbal_"|"_hldType_"|"_hldAcc
		set output=output_"|"_spcRate_"|"_ccyIrn_"|"_bthIrn_"|"_pbkNo_"|"_lineNo_"|"_ccyTaxAmt_"|"_bthTaxAmt_"|"_stpCalFlg_"|"_curDt_"|"_cusType_"|"_taxkey_"|"_fwdAccInt
		set output=output_"|"_fwdAccTax_"|"_custId_"|"_dedFeeAccNo_"|"_noNobk_"|"_pedCcyOut_"|"_pedBthOut_"|"_pedCcyOut2_"|"_pedBthOut2_"|"_bbDepCom_"|"_bbWithCom_"|"_bnDepCom_"|"_bnWithCom_"|"_ttDepCom
		set output=output_"|"_ttWithCom_"|"_lastDepDt_"|"_lastIntDt_"|"_tdBnCcy_"|"_pedDt_"|"_taxid_"|"_fwdCcyInt_"|"_engNam_"|"_add1_"|"_add2_"|"_cntry_"|"_nation_"|"_passNum_"|"_phoneNum_"|"_faxNum_"|"_email_"|"_idNo
		set output=output_"|"_sysType_"|"_oldCustId
		
		set pos=$O(^ZMK("FCD712",ZTJD,CID,""),-1)
		if pos.isNull() set pos=1
		else set pos=pos+1
		set ^ZMK("FCD712",ZTJD,CID,pos)=output
		
		quit 
		
CHKIO(X)
	// CHECK WHETHER THE FILE EXISTS OR NOT
	set z =$$FILE^%ZOPEN(X,"READ",5)
	if 'z do {
		set ER =1
		set RM =$P(z,"|",2)
	}
	close X

	quit	
		
		
		
		
		
					

---------- THREXIT ------ Section marker
