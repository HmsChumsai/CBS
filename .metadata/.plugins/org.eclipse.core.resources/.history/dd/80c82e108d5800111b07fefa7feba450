//DO NOT MODIFY  CAP Customer Inquiry|ZCAPCIF|||||||1


	/*	
	Created By Ravipong Chumsai Na Ayuthaya 18/09/11		
	The labels for each of these services is stored in ZUTBLTRAN table.  ZMRPC777
	references that table to get the appropriate label^routine to call to
	process the incoming request.
	
	This procedure is called only by ZMRPC777.
	
	Refer to ZMRPC777.proc for specifics about that procedure.	

	
	*/

	#WARN * OFF
 	quit
 	
CUSTIND(String input)
	/*  */
	//w $$CUSTIND^ZCAPCIF("||||||||||P|CI||1||||0|0|0|")
 /* ***************************************************************************
 	CAP Customer Inquiry (individual)
 	
 	Search for and return customer data for all customer records that
 	match the input criteria.  There is a limit of 20 records maximum
 	to be returned.
 	
 	Refer to the spreadsheet Profile-to-CAP_data_mapping_asof_interface_20110105_PT for
 	details of the input and output records.
 
  

   Customer search / inquiry
	
	Input Arguments:
	
	   input	"|" delimited string	/REQ/VAL/READ
	   
	   	custType	Customer Type ("P" for personal)			Required
	   	inqType		Inquiry Type ("CI" Citizen ID; "PP" passport)		Required
	   	typeID		Value for Citizen Card or passport			Not Required
	   	custNum		Customer Number						Required if CI Num and passport are null
	   	custName	Customer Name						Not Required
	   	custSurname	Customer Surname					Not Required
	   	searchCond	Search Condition (how is this used?)			Not Required
	   	
	   
	Returns:
	
	   output	"|" delimited string containing customer properties.  Note that there are some columns that
	   		are returned multiple times.  This is intentional.
	   	
	  
																	*/
	
	type public Number ER = 0
	type public String RM = ""
	type String custName, custNum, custSurname, custType, header, inqType, output, searchCond, typeValue
	type String respCode = "0000", respDesc = ""
	type Number ACN = "", CNT = 0, recordCount = 0,recordCifCount=0,recordHhCount=0
	type String WHERE=""
	
	set ^ZNEWTEST(5)=input
	
	set header 		= input.piece("|",1,10)	// Common header
	set custType 		= input.piece("|",11)	// Customer Type: P=personal; C=Corporate
	set inqType 		= input.piece("|",12)	// Inquiry Type: "CI"=citizen ID card; "PP"=passport)
	set typeValue 		= input.piece("|",13)	// Citizen ID number or passport number
	set custNum 		= input.piece("|",14)	// Customer Number
	set custName 		= input.piece("|",15)	// Customer Name
	set custSurname 	= input.piece("|",16)	// Customer surname
	set searchCond 		= input.piece("|",17)	// Search condition 
	set sTart		= input.piece("|",18)	
	set cOunt		= input.piece("|",19)
	set toTal		= input.piece("|",20)
	set output =""
	
	/* Search for the customer based on customer citizenship card ID, passport number, or
	   customer number.
	   
	   Get the customer number from the database and use that for the main select statement below */
	if 'custNum.isNull() do {
	
			if 'Db.isDefined("CIF","ACN=:custNum") set ER = 1, RM = "Invalid Customer Number "_custNum quit
			type RecordCIF cif = Db.getRecord("CIF","ACN=:custNum")
			if 'cif.getMode() set ER = 1, RM = "Invalid Customer Number "_custNum quit
			set ACN = cif.acn
			set WHERE = "ACN="_ACN
	}
	
	if custName.isNull(),'custSurname.isNull() set ER = 1, RM = "Invalid Inquiry :Name Required" quit
	// Base search on citizenship ID number
	if inqType = "CI" do {
		// Search by customer citizen ID card
		set ^ZNEWTEST(6)="IN:"_typeValue
		if 'typeValue.isNull() do {
			type ResultSet rs = Db.select("ACN","CIF","ZCIZID=:typeValue")
			if 'rs.next() set ER = 1, RM = "Customer Citizenship ID Not Found: "_ typeValue quit
			set ACN = rs.getCol("ACN")
			set WHERE = "ZCIZID='"_typeValue_"'"
			set ^ZNEWTEST(7)=WHERE
		}
		
		// if no citizenship ID was passed in, use customer number, if it was passed in
		
		// otherwise return an error indicating there is missing input data.
		// if custNum.isNull() set ER = 1, RM = "Customer Number or Identifier Required" quit
	}
	
	set ^ZNEWTEST(8)=WHERE_"|"_ER
	if inqType = "PP" do {
		// search by customer passport number
		if 'typeValue.isNull() do {
			type ResultSet rs = Db.select("ACN","CIF","PASNUM=:typeValue")
			if 'rs.next() set ER = 1, RM = "Passport Number Not Found: "_ typeValue quit
			set ACN = rs.getCol("ACN")
			set WHERE = "PASNUM='"_typeValue_"'"
			
			}
		if custNum.isNull(),typeValue.isNull() set ER = 1, RM = "Customer Number or Identifier Required" quit
		
	}
		
	set ^ZNEWTEST(9)=WHERE
	if 'custName.isNull() do {
			
		set NAME=custName
		set END=custName_$C(255)
			
		if 'custSurname.isNull() do {
			set END = custName_","_custSurname_$C(255)
			set NAME= custName_","_custSurname
		}
	}
	
	set ^ZNEWTEST(10)=WHERE_"|"_ER
	if ER quit RM.get()	
		
	// build WHERE clause based on the type of request this is.
	//if custNum.isNull(),custSurname.isNull(),custName.isNull() set ER = 1, RM =  "Customer Number or Identifier Required" quit
	
	
	set WHERE = WHERE_" AND PERS=0"
	
	set ^ZNEWTEST(11)=WHERE
	
	if WHERE.isNull() set ER = 1, RM =inqType_" : is not a valid Inquiry Type :" quit

	do {
		// We need to determine if we have more than 1 record in the result set.  If we have more than 1, then
		//  build the output using the Personal List section of the record layout.  If we only have 1 record, then
		// build the output using the personal detail section of the layout.

		type String exe()
		type ResultSet recCifCount
		if 'custName.isNull() set recCifCount = Db.select("ACN","CIF","ZXNAME BETWEEN :NAME AND :END AND PERS=0")
		else set recCifCount = Db.select("ACN","CIF",WHERE)
		while recCifCount.next() do {	
			type ResultSet recHhCount = Db.select("COUNT(HEADACN)","CIFHH","ACN=:recCifCount.getCol(1)")
			if recHhCount.next() set recordHhCount=recHhCount.getCol(1), recordCount=recordCount+recordHhCount
			else set recordCount=recordCount+1
		}				
	}

	do {
		catch error@"LOGERR" {
			set respCode = "1999"	// default failure code
			set respDesc = error.description
			quit
		}

		set exit=0
		// We need to determine if we have more than 1 record in the result set.  If we have more than 1, then
		//   build the output using the Personal List section of the record layout.  If we only have 1 record, then
		// build the output using the personal detail section of the layout.

		
		set ztmp=""
		type DbSet ds
		
		if custName.isNull() set ds = Db.selectDbSet("CIF",WHERE)		
		if 'custName.isNull() set ds = Db.selectDbSet("CIF","ZXNAME BETWEEN :NAME AND :END")		
		
		set CNT=0      //For Tracking all Record
		set zCNT=cOunt 
		set zwait=0
		set sendFLG=0  // Count Actual sent item
		if (cOunt'=0),(toTal>0) set zwait=1
		while ds.next() do { quit:exit
			set i=0
			type RecordCIF cif = ds.getRecord()
			type ResultSet cifhh = Db.select("HEADACN,HHTYP,RELATE,ZATHR,ZBRD,ZPOS,ZSHHD,ZSHM","CIFHH","ACN=:cif.acn")
			
			if (toTal=0),(cOunt'=0),(sTart=0) do {	
													
				set output.piece("|",1) = cif.ztitle
							
				if (searchCond="EN") set output.piece("|",2)= cif.zenam
				else set output.piece("|",2) = cif.nam		
				set output.piece("|",3) = cif.acn
				set output.piece("|",4) = cif.zcizid			
				set output.piece("|",5) = cif.dob.toString("DD/MM/YEAR")			
				set output.piece("|",6) = cif.taxid			
				set output.piece("|",7) = cif.boo			
				//		
					
			
				//Affiliation INFO
				while cifhh.next() do { quit:exit
				
					set zhh=output
					set zhh.piece("|",8) = cifhh.getCol(1)
					set zhh.piece("|",9) = cifhh.getCol(2)
					set zhh.piece("|",10) = $S(cifhh.getCol(1)=cif.acn:1,1:0)
					set zhh.piece("|",11) = $$GET^ZCBSCMS("NAM,CIF,ACN,"_cifhh.getCol(1))
					set zhh.piece("|",12) = cifhh.getCol(3)
					set zhh.piece("|",13) = cifhh.getCol(4)
					set zhh.piece("|",14) = cifhh.getCol(5)
					set zhh.piece("|",15) = cifhh.getCol(6)
					set zhh.piece("|",16) = cifhh.getCol(7)
					set zhh.piece("|",17) = cifhh.getCol(8)
					set zhh.piece("|",23) = ""	
					if cifhh.getCol(3)="110100" do {
						if (zhh.piece("|",10)=0) do {
							type RecordCIF zspouse = Db.getRecord("CIF","ACN=:cifhh.getCol(1)")	
							set zhh.piece("|",18) = zspouse.acn
							set zhh.piece("|",19) = zspouse.ztitle
							set zhh.piece("|",20) = zspouse.fname
							set zhh.piece("|",21) = zspouse.mname
							set zhh.piece("|",22) = zspouse.lnm
							set zhh.piece("|",23) = zspouse.zcizid
							set zhh.piece("|",24) = zspouse.nation
							set zhh.piece("|",25) = zspouse.zrescd					
						}
						else  do {
							type ResultSet zrs = Db.select("MACN","CIFHH0","ACN=:cifhh.getCol(1)")
							if zrs.next() set ZMACN = zrs.getCol(1)
							type RecordCIF zspouse = Db.getRecord("CIF","ACN=:cifhh.getCol(1)")	
							set zhh.piece("|",18) = zspouse.acn
							set zhh.piece("|",19) = zspouse.ztitle
							set zhh.piece("|",20) = zspouse.fname
							set zhh.piece("|",21) = zspouse.mname
							set zhh.piece("|",22) = zspouse.lnm
							set zhh.piece("|",23) = zspouse.zcizid
							set zhh.piece("|",24) = zspouse.nation
							set zhh.piece("|",25) = zspouse.zrescd	
						}
					}
					else  do {
						set zhh.piece("|",18) = ""
						set zhh.piece("|",19) = ""
						set zhh.piece("|",20) = ""
						set zhh.piece("|",21) = ""
						set zhh.piece("|",22) = ""
						set zhh.piece("|",23) = ""
						set zhh.piece("|",24) = ""
						set zhh.piece("|",25) = ""	
					}
					set zhh =zhh_124.char()		
					if (zCNT'=0) do {
						set ztmp=ztmp_zhh
						set sendFLG=sendFLG+1
						set zCNT=zCNT-1
					}
						
				}
				
				
				//Quit if CIFHH is available(Already recorded) 
				if recordHhCount=0 do {
				
					//If house hold not exists,send null
					set output.piece("|",25) =""
					
					if (zCNT'=0) do {
						set ztmp=ztmp_output_124.char()
						set sendFLG=sendFLG+1
						set zCNT=zCNT-1
					}
				}
				
				set ^ZNEWTEST(1)=ztmp
				set ^ZNEWTEST(2)=ztmp
			}
			
			if (zwait) do {	
			
				set output.piece("|",1) = cif.ztitle					
				if (searchCond="EN") set output.piece("|",2)= cif.zenam
				else set output.piece("|",2) = cif.nam		
				set output.piece("|",3) = cif.acn
				set output.piece("|",4) = cif.zcizid			
				set output.piece("|",5) = cif.dob.toString("DD/MM/YEAR")			
				set output.piece("|",6) = cif.taxid			
				set output.piece("|",7) = cif.boo			
				//set output.piece("|",8) =		
		
				//Affiliation INFO
